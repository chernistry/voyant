~/IdeaProjects/navan/root (tests/update-test-suite) ❯ npm run test:custom

> voyant-travel-assistant@1.0.0 test:custom
> jest --runInBand --testPathPattern=tests/custom/

 FAIL  tests/custom/api_or_cli.test.ts
  ● Test suite failed to run

    tests/custom/api_or_cli.test.ts:4:24 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

    4 import { router } from '../../src/api/routes.ts';
                             ~~~~~~~~~~~~~~~~~~~~~~~~~
    tests/custom/api_or_cli.test.ts:5:28 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

    5 import { handleChat } from '../../src/core/blend.ts';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

{"level":20,"time":1757575658891,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Tokyo&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575658901,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":503,"statusText":"Service Unavailable","msg":"📡 API response received"}
{"level":20,"time":1757575658901,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":503,"statusText":"Service Unavailable","msg":"❌ HTTP error response"}
{"level":20,"time":1757575658905,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","msg":"🔌 Circuit breaker is open"}
{"level":20,"time":1757575686925,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575687274,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575687282,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":588,"duration":365,"msg":"✅ API request successful"}
{"level":20,"time":1757575687289,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575687293,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":503,"statusText":"Service Unavailable","msg":"📡 API response received"}
{"level":20,"time":1757575687293,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":503,"statusText":"Service Unavailable","msg":"❌ HTTP error response"}
{"level":20,"time":1757575687295,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
{"level":20,"time":1757575697854,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Tokyo&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575697859,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":503,"statusText":"Service Unavailable","msg":"📡 API response received"}
{"level":20,"time":1757575697859,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":503,"statusText":"Service Unavailable","msg":"❌ HTTP error response"}
{"level":20,"time":1757575697860,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","errorText":"Service Unavailable","msg":"📄 Error response body"}
{"level":20,"time":1757575697862,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","msg":"🔌 Circuit breaker is open"}
 FAIL  tests/custom/brave_search_fallback.test.ts (64.014 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'f02es41x', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'f02es41x',
        newSlots: { city: 'Tokyo', destinationCity: 'Tokyo' },
        prevSlots: {},
        mergedSlots: { city: 'Tokyo', destinationCity: 'Tokyo' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'f02es41x',
        slots: { city: 'Tokyo', destinationCity: 'Tokyo' },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-country-fallback',
        newSlots: {
          city: 'Tokyo',
          originCity: 'Tokyo',
          destinationCity: 'June from Tokyo',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        prevSlots: {},
        mergedSlots: {
          city: 'Tokyo',
          originCity: 'Tokyo',
          destinationCity: 'June from Tokyo',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-country-fallback',
        slots: {
          city: 'Tokyo',
          originCity: 'Tokyo',
          destinationCity: 'June from Tokyo',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3mgatinq', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '3mgatinq',
        newSlots: { city: 'Paris', destinationCity: 'do in Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'do in Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '3mgatinq',
        slots: { city: 'Paris', destinationCity: 'do in Paris' },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '49avtets', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '49avtets',
        newSlots: { city: 'Tokyo', destinationCity: 'Tokyo' },
        prevSlots: {},
        mergedSlots: { city: 'Tokyo', destinationCity: 'Tokyo' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '49avtets',
        slots: { city: 'Tokyo', destinationCity: 'Tokyo' },
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {},
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-multiple-fallback',
        newSlots: {
          city: 'Tokyo',
          originCity: 'Tokyo',
          destinationCity: 'June from Tokyo',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        prevSlots: {},
        mergedSlots: {
          city: 'Tokyo',
          originCity: 'Tokyo',
          destinationCity: 'June from Tokyo',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-multiple-fallback',
        slots: {
          city: 'Tokyo',
          originCity: 'Tokyo',
          destinationCity: 'June from Tokyo',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 5,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

  ● Brave Search Fallback Tests › Weather Fallback › falls back to Brave Search when weather API fails

    expect(received).toContain(expected) // indexOf

    Expected substring: "Tokyo"
    Received string:    "When are you planning to travel?"

      61 |         .expect(200);
      62 |     
    > 63 |       expect(response.body.reply).toContain('Tokyo');
         |                                   ^
      64 |       expect(response.body.reply).toContain('25');
      65 |       expect(response.body.citations).toContain('Brave Search');
      66 |     }, 45000);

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:63:35)

  ● Brave Search Fallback Tests › Country Facts Fallback › falls back to Brave Search when country API fails

    expected 200 "OK", got 500 "Internal Server Error"

       97 |         .post('/chat')
       98 |         .send({ message: 'Where should I go in June from Tokyo?', threadId: 'test-country-fallback' })
    >  99 |         .expect(200);
          |          ^
      100 |
      101 |       expect(response.body.reply).toContain('Japan');
      102 |       expect(response.body.citations).toContain('Brave Search');

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:99:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:309:14)
      at node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:342:13)
      at Test.assert (node_modules/supertest/lib/test.js:195:23)
      at localAssert (node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (node_modules/supertest/lib/test.js:152:11)

  ● Brave Search Fallback Tests › Attractions Fallback › falls back to Brave Search when attractions API fails

    expected 200 "OK", got 500 "Internal Server Error"

      136 |         .post('/chat')
      137 |         .send({ message: 'What to do in Paris?' })
    > 138 |         .expect(200);
          |          ^
      139 |     
      140 |       expect(response.body.reply).toContain('Paris');
      141 |       expect(response.body.citations).toContain('Brave Search');

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:138:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:309:14)
      at node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:342:13)
      at Test.assert (node_modules/supertest/lib/test.js:195:23)
      at localAssert (node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (node_modules/supertest/lib/test.js:152:11)

  ● Brave Search Fallback Tests › Enhanced Retry Strategy › retries with exponential backoff before falling back

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 1

      169 |         .expect(200);
      170 |     
    > 171 |       expect(attemptCount).toBe(3); // Should have retried 3 times
          |                            ^
      172 |       expect(response.body.reply).toContain('25°C');
      173 |       expect(response.body.citations).toContain('Open-Meteo');
      174 |     }, 20000);

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:171:28)

  ● Brave Search Fallback Tests › Multiple API Failures › handles multiple API failures with appropriate fallbacks

    expected 200 "OK", got 500 "Internal Server Error"

      210 |         .post('/chat')
      211 |         .send({ message: 'Where should I go in June from Tokyo?', threadId: 'test-multiple-fallback' })
    > 212 |         .expect(200);
          |          ^
      213 |     
      214 |       expect(response.body.reply).toContain('Tokyo');
      215 |       expect(response.body.citations).toContain('Brave Search');

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:212:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:309:14)
      at node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:342:13)
      at Test.assert (node_modules/supertest/lib/test.js:195:23)
      at localAssert (node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (node_modules/supertest/lib/test.js:152:11)

 FAIL  tests/custom/brave_search.test.ts
  ● Brave Search Adapter › searchTravelInfo › handles API failure

    expect(received).toContain(expected) // indexOf

    Expected value: "unknown_error"
    Received array: ["http_5xx", "http_4xx", "network", "timeout", "circuit_open"]

      52 |       expect(result.ok).toBe(false);
      53 |       if (!result.ok) {
    > 54 |         expect(['http_5xx', 'http_4xx', 'network', 'timeout', 'circuit_open']).toContain(result.reason);
         |                                                                                ^
      55 |       }
      56 |     });
      57 |

      at Object.<anonymous> (tests/custom/brave_search.test.ts:54:80)

  ● Brave Search Adapter › extractCountryFromResults › extracts country information from results

    expect(received).toContain(expected) // indexOf

    Expected substring: "Yen"
    Received string:    "Japan: Japanese language, Japanese yen (JPY) currency"

      138 |       expect(country).toContain('Japan');
      139 |       expect(country).toContain('Japan');
    > 140 |       expect(country).toContain('Yen');
          |                       ^
      141 |     });
      142 |
      143 |     test('returns null when no country info found', async () => {

      at Object.<anonymous> (tests/custom/brave_search.test.ts:140:23)

 PASS  tests/custom/chat.test.ts (18.308 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eq2onbnp', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eq2onbnp', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eq2onbnp', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eq2onbnp', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'eq2onbnp',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'eq2onbnp',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'eq2onbnp',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'eq2onbnp',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'eq2onbnp',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test123', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test123', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test123', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test123', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test123',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test123',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test123',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test123',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test123',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'dbimjnkw', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'dbimjnkw', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'dbimjnkw', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'dbimjnkw', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'dbimjnkw',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'dbimjnkw',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'dbimjnkw',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'dbimjnkw',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'dbimjnkw',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

 PASS  tests/custom/diagnostic.test.ts
  ● Console

    console.log
      Testing imports...

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:3:13)

    console.log
      Importing router...

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:6:15)

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.log
      Router imported successfully

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:8:15)

    console.log
      Importing handleChat...

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:10:15)

    console.log
      handleChat imported successfully

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:12:15)

    console.log
      Importing pino...

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:14:15)

    console.log
      Pino imported successfully

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:16:15)

    console.log
      All imports successful!

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:18:15)

    console.log
      Testing Express app creation...

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:27:13)

    console.log
      Creating Express app...

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:34:15)

    console.log
      Express app created successfully

      at Object.<anonymous> (tests/custom/diagnostic.test.ts:40:15)

{"level":20,"time":1757575729972,"pid":54374,"hostname":"sicksadmbp","target":"unknown","attempt":1,"maxAttempts":4,"url":"https://api.open-meteo.com/v1/forecast?latitude=0&longitude=0","msg":"🌐 API request attempt"}
 PASS  tests/custom/fetch_allowlist.test.ts
{"level":20,"time":1757575730294,"pid":54374,"hostname":"sicksadmbp","target":"unknown","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575730299,"pid":54374,"hostname":"sicksadmbp","target":"unknown","responseSize":160,"duration":334,"msg":"✅ API request successful"}
 FAIL  tests/custom/flight_clarification.test.ts (20.442 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-2',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'From NYC, end of June (last week), 4-5 days. 2 adults + toddler in stroller. Parents mid - 60s; dad dislikes long flights. Budget under $2.5k total. Ideas?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.75, constraints=4'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'From NYC, end of June (last week), 4-5 days. 2 adults + toddler in stroller. Parents mid - 60s; dad dislikes long flights. Budget under $2.5k total. Ideas?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.75, constraints=4'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-3',
        newSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'I need help with flights',
          clarification_reasoning: 'The query is very general and lacks specific details like origin, destination, or dates. It indicates a need for assistance, suggesting complex planning is required.'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'I need help with flights',
          clarification_reasoning: 'The query is very general and lacks specific details like origin, destination, or dates. It indicates a need for assistance, suggesting complex planning is required.'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-4',
        newSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'flights to paris',
          clarification_options: 'direct_search_or_web_research'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'flights to paris',
          clarification_options: 'direct_search_or_web_research'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-4',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'direct search',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        prevSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'flights to paris',
          clarification_options: 'direct_search_or_web_research'
        },
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'flights to paris',
          clarification_options: 'direct_search_or_web_research',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'direct search',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-5',
        newSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'trip to europe with family',
          clarification_options: 'direct_search_or_web_research'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'trip to europe with family',
          clarification_options: 'direct_search_or_web_research'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-5',
        slots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'trip to europe with family',
          clarification_options: 'direct_search_or_web_research'
        },
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-5',
        newSlots: {},
        prevSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'trip to europe with family',
          clarification_options: 'direct_search_or_web_research'
        },
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'trip to europe with family',
          clarification_options: 'direct_search_or_web_research'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

  ● Flight Query Complexity and Clarification › should route complex travel query to web search

    expect(received).toBe(expected) // Object.is equality

    Expected: "web_search"
    Received: "system"

      25 |     });
      26 |
    > 27 |     expect(result.intent).toBe('web_search');
         |                           ^
      28 |     expect(result.needExternal).toBe(true);
      29 |     expect(result.confidence).toBeGreaterThan(0.7);
      30 |   });

      at Object.<anonymous> (tests/custom/flight_clarification.test.ts:27:27)

  ● Flight Query Complexity and Clarification › should handle direct search clarification response

    expect(received).toBe(expected) // Object.is equality

    Expected: "flights"
    Received: "system"

      57 |     });
      58 |
    > 59 |     expect(result.intent).toBe('flights');
         |                           ^
      60 |     expect(result.needExternal).toBe(true);
      61 |     
      62 |     // Check that clarification state is cleared

      at Object.<anonymous> (tests/custom/flight_clarification.test.ts:59:27)

  ● Flight Query Complexity and Clarification › should handle travel research clarification response

    expect(received).toBe(expected) // Object.is equality

    Expected: "web_search"
    Received: "flights"

      80 |     });
      81 |
    > 82 |     expect(result.intent).toBe('web_search');
         |                           ^
      83 |     expect(result.needExternal).toBe(true);
      84 |     expect(result.slots.search_query).toBe('trip to europe with family');
      85 |     

      at Object.<anonymous> (tests/custom/flight_clarification.test.ts:82:27)

 FAIL  tests/custom/graph-optimization.test.ts
  ● Test suite failed to run

    tests/custom/graph-optimization.test.ts:54:49 - error TS2820: Type '"location"' is not assignable to type '"LOCATION" | "DATE" | "TIME" | "MONEY" | "DURATION" | "PERSON" | "ORGANIZATION" | "MISC"'. Did you mean '"LOCATION"'?

    54       locations: [{ text: 'Paris', score: 0.95, entity_type: 'location', confidence_score: 0.95, entity_group: 'LOC' }],
                                                       ~~~~~~~~~~~

      src/core/ner-enhanced.ts:5:3
        5   entity_type: 'LOCATION' | 'DATE' | 'TIME' | 'MONEY' | 'DURATION' | 'PERSON' | 'ORGANIZATION' | 'MISC';
            ~~~~~~~~~~~
        The expected type comes from property 'entity_type' which is declared here on type 'EnhancedEntity'
    tests/custom/graph-optimization.test.ts:65:43 - error TS2345: Argument of type '{ log: { info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }; }' is not assignable to parameter of type '{ log: Logger<never, boolean>; onStatus?: ((status: string) => void) | undefined; }'.
      Types of property 'log' are incompatible.
        Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'Logger<never, boolean>'.
          Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'BaseLogger'.
            Types of property 'level' are incompatible.
              Type 'number' is not assignable to type 'LevelWithSilentOrString'.

    65     await runGraphTurn(message, threadId, mockLogger);
                                                 ~~~~~~~~~~
    tests/custom/graph-optimization.test.ts:75:43 - error TS2345: Argument of type '{ log: { info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }; }' is not assignable to parameter of type '{ log: Logger<never, boolean>; onStatus?: ((status: string) => void) | undefined; }'.
      Types of property 'log' are incompatible.
        Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'Logger<never, boolean>'.
          Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'BaseLogger'.
            Types of property 'level' are incompatible.
              Type 'number' is not assignable to type 'LevelWithSilentOrString'.

    75     await runGraphTurn(message, threadId, mockLogger);
                                                 ~~~~~~~~~~
    tests/custom/graph-optimization.test.ts:88:49 - error TS2820: Type '"location"' is not assignable to type '"LOCATION" | "DATE" | "TIME" | "MONEY" | "DURATION" | "PERSON" | "ORGANIZATION" | "MISC"'. Did you mean '"LOCATION"'?

    88       locations: [{ text: 'Tokyo', score: 0.95, entity_type: 'location', confidence_score: 0.95, entity_group: 'LOC' }],
                                                       ~~~~~~~~~~~

      src/core/ner-enhanced.ts:5:3
        5   entity_type: 'LOCATION' | 'DATE' | 'TIME' | 'MONEY' | 'DURATION' | 'PERSON' | 'ORGANIZATION' | 'MISC';
            ~~~~~~~~~~~
        The expected type comes from property 'entity_type' which is declared here on type 'EnhancedEntity'
    tests/custom/graph-optimization.test.ts:97:58 - error TS2345: Argument of type '{ log: { info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }; }' is not assignable to parameter of type '{ log: Logger<never, boolean>; onStatus?: ((status: string) => void) | undefined; }'.
      Types of property 'log' are incompatible.
        Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'Logger<never, boolean>'.
          Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'BaseLogger'.
            Types of property 'level' are incompatible.
              Type 'number' is not assignable to type 'LevelWithSilentOrString'.

    97     const result = await runGraphTurn(message, threadId, mockLogger);
                                                                ~~~~~~~~~~

{"level":20,"time":1757575798589,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575798915,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575798919,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":587,"duration":336,"msg":"✅ API request successful"}
{"level":20,"time":1757575798925,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","attempt":1,"maxAttempts":4,"url":"https://api.open-meteo.com/v1/forecast?latitude=48.85341&longitude=2.3488&daily=temperature_2m_max,t...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575799244,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575799247,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","responseSize":582,"duration":328,"msg":"✅ API request successful"}
 FAIL  tests/custom/graph.test.ts (50.143 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread',
        newSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        prevSlots: {},
        mergedSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        prevSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        mergedSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread',
        newSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        prevSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        mergedSlots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.log
      🧪 Test Evaluator - BaseURL: https://openrouter.ai/api/v1, Model: deepseek/deepseek-chat-v3.1:free, API Key: SET

      at evaluateWithLLM (src/test/llm-evaluator.ts:33:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.log
      ✅ Test Evaluator Response: {
        "passes": false,
        "confidence": 0.0,
        "reason": "Response does not provide packing suggestions or address the query's intent. It asks for missing information (city/dates) instead of using the pr...

      at evaluateWithLLM (src/test/llm-evaluator.ts:70:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread',
        slots: {
          city: 'Tokyo',
          destinationCity: 'Tokyo in June',
          month: 'June',
          dates: 'June',
          departureDate: 'June',
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-context-thread',
        newSlots: { city: 'Paris', destinationCity: 'Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-context-thread',
        slots: { city: 'Paris', destinationCity: 'Paris' },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

  ● Agent Graph › destinations intent with city and month

    thrown: "Exceeded timeout of 10000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

       5 |
       6 | describe('Agent Graph', () => {
    >  7 |   test('destinations intent with city and month', async () => {
         |   ^
       8 |     const result = await runGraphTurn('Where should I go in Tokyo in June?', 'test-thread', mockLogger);
       9 |     expect(result).toHaveProperty('done', true);
      10 |     expect(result).toHaveProperty('reply');

      at tests/custom/graph.test.ts:7:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

  ● Agent Graph › packing intent with city and month

    thrown: "Exceeded timeout of 10000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      17 |   }, 10000);
      18 |
    > 19 |   test('packing intent with city and month', async () => {
         |   ^
      20 |     const result = await runGraphTurn('What to pack for Tokyo in March?', 'test-thread', mockLogger);
      21 |     expect(result).toHaveProperty('done', true);
      22 |     expect(result).toHaveProperty('reply');

      at tests/custom/graph.test.ts:19:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

  ● Agent Graph › attractions intent with city

    thrown: "Exceeded timeout of 10000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      29 |   }, 10000);
      30 |
    > 31 |   test('attractions intent with city', async () => {
         |   ^
      32 |     const result = await runGraphTurn('What to do in Barcelona?', 'test-thread', mockLogger);
      33 |     expect(result).toHaveProperty('done', true);
      34 |     expect(result).toHaveProperty('reply');

      at tests/custom/graph.test.ts:31:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

  ● Agent Graph › unknown intent returns clarification

    TypeError: ctx.log.info is not a function

      458 |   // Handle consent responses for deep research (higher priority)
      459 |   if (currentAwaitingDeepResearch && currentPendingDeepResearchQuery) {
    > 460 |     ctx.log.info({ 
          |             ^
      461 |       awaitingDeepResearch: currentAwaitingDeepResearch, 
      462 |       pendingDeepResearchQuery: currentPendingDeepResearchQuery, 
      463 |       message,

      at runGraphTurn (src/core/graph.ts:460:13)
      at Object.<anonymous> (tests/custom/graph.test.ts:44:20)

  ● Agent Graph › follow-up context handling

    thrown: "Exceeded timeout of 15000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      53 |   }, 10000);
      54 |
    > 55 |   test('follow-up context handling', async () => {
         |   ^
      56 |     const threadId = 'test-context-thread';
      57 |     
      58 |     // First query

      at tests/custom/graph.test.ts:55:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

{"level":20,"time":1757575802699,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=InvalidCity&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575802779,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575802787,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":32,"duration":93,"msg":"✅ API request successful"}

  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "🔧 SLOTS: getThreadSlots {
      threadId: 'test-context-thread',
      slots: { city: 'Paris', destinationCity: 'Paris' },
      storeSize: 2,
      isCliMode: false
    }".

       8 | function debugLog(message: string, data?: any) {
       9 |   if (isDebugMode) {
    > 10 |     console.debug(message, data);
         |             ^
      11 |   }
      12 | }
      13 |

      at console.debug (node_modules/@jest/console/build/BufferedConsole.js:117:10)
      at debugLog (src/core/slot_memory.ts:10:13)
      at getThreadSlots (src/core/slot_memory.ts:72:3)
      at runGraphTurn (src/core/graph.ts:299:42)
      at Object.<anonymous> (tests/custom/graph.test.ts:63:21)


  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "🔧 SLOTS: getThreadSlots {
      threadId: 'test-context-thread',
      slots: { city: 'Paris', destinationCity: 'Paris' },
      storeSize: 2,
      isCliMode: false
    }".

       8 | function debugLog(message: string, data?: any) {
       9 |   if (isDebugMode) {
    > 10 |     console.debug(message, data);
         |             ^
      11 |   }
      12 | }
      13 |

      at console.debug (node_modules/@jest/console/build/BufferedConsole.js:117:10)
      at debugLog (src/core/slot_memory.ts:10:13)
      at getThreadSlots (src/core/slot_memory.ts:72:3)
      at runGraphTurn (src/core/graph.ts:395:37)
      at Object.<anonymous> (tests/custom/graph.test.ts:63:21)


  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "🔧 SLOTS: getThreadSlots {
      threadId: 'test-context-thread',
      slots: { city: 'Paris', destinationCity: 'Paris' },
      storeSize: 2,
      isCliMode: false
    }".

       8 | function debugLog(message: string, data?: any) {
       9 |   if (isDebugMode) {
    > 10 |     console.debug(message, data);
         |             ^
      11 |   }
      12 | }
      13 |

      at console.debug (node_modules/@jest/console/build/BufferedConsole.js:117:10)
      at debugLog (src/core/slot_memory.ts:10:13)
      at getThreadSlots (src/core/slot_memory.ts:72:3)
      at runGraphTurn (src/core/graph.ts:443:38)
      at Object.<anonymous> (tests/custom/graph.test.ts:63:21)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/custom/graph.test.ts.

      670 |     } else {
      671 |       // Stage 2: LLM fallback for low-confidence cases
    > 672 |       const { extractEntities } = await import('./ner.js');
          |                                   ^
      673 |       interface NlpEntity { entity_group: string; score: number; text: string }
      674 |       const entities: NlpEntity[] = await extractEntities(message);
      675 |       const llmCities = entities

      at src/core/graph.ts:672:35
      at runGraphTurn (src/core/graph.ts:672:35)
      at Object.<anonymous> (tests/custom/graph.test.ts:63:21)
{"level":20,"time":1757575814303,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575814657,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575814661,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":587,"duration":363,"msg":"✅ API request successful"}
{"level":20,"time":1757575814666,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575815015,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575815015,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575815017,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575815019,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
 PASS  tests/custom/hallucination_guard.test.ts (15.021 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

{"level":20,"time":1757575816266,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.2945&lat=48.8584&radius=4000&format=geojson&l...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575816272,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575816276,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","responseSize":122,"duration":19,"msg":"✅ API request successful"}
 FAIL  tests/custom/opentripmap.test.ts
  ● OpenTripMap adapter › handles missing API key

    expect(received).toBe(expected) // Object.is equality

    Expected: "missing_api_key"
    Received: "network"

      37 |     const res = await searchPOIs({ lat: 0, lon: 0 });
      38 |     expect(res.ok).toBe(false);
    > 39 |     if (!res.ok) expect(res.reason).toBe('missing_api_key');
         |                                     ^
      40 |   });
      41 | });
      42 |

      at Object.<anonymous> (tests/custom/opentripmap.test.ts:39:37)

 FAIL  tests/custom/packing.test.ts
  ● Test suite failed to run

    Configuration error:
    
    Could not locate module ../src/tools/weather.js mapped as:
    $1.
    
    Please check your configuration for these entries:
    {
      "moduleNameMapper": {
        "/^(\.{1,2}\/.*)\.js$/": "$1"
      },
      "resolver": undefined
    }

      1 | import pino from 'pino';
      2 |
    > 3 | jest.mock('../src/tools/weather.js', () => ({
        |      ^
      4 |   getWeather: async () => ({ ok: true, summary: 'High 30°C / Low 22°C; precip prob 20%' })
      5 | }));
      6 | jest.mock('../src/tools/country.js', () => ({

      at createNoMappedModuleFoundError (node_modules/jest-resolve/build/resolver.js:759:17)
      at Object.<anonymous> (tests/custom/packing.test.ts:3:6)

{"level":20,"time":1757575816465,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=0&lat=0&radius=4000&format=geojson&limit=10&kin...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575816469,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","error":{"name":"Error","message":"Nock: No match for request {\n  \"method\": \"GET\",\n  \"url\": \"https://api.opentripmap.com/0.1/en/places/radius?lon=0&lat=0&radius=4000&format=geojson&limit=10&kinds=interesting_places%2Ccultural%2Chistoric%2Carchitecture%2Cmuseums%2Cfortifications%2Curban_environment%2Cother_buildings_and_structures&apikey=test\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}","code":"ERR_NOCK_NO_MATCH"},"msg":"🌐 Network error"}
{"level":20,"time":1757575816470,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
 PASS  tests/custom/receipts.selfcheck.test.ts (11.218 s)
{"level":20,"time":1757575866273,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575866596,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575866600,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":588,"duration":331,"msg":"✅ API request successful"}
{"level":20,"time":1757575866606,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575866921,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575866921,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575866922,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575866924,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
 FAIL  tests/custom/router.memory.test.ts (77.5 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qccv85dt', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qccv85dt', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qccv85dt', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qccv85dt', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'qccv85dt',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qccv85dt',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qccv85dt',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'qccv85dt',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.80' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qccv85dt',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qccv85dt',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qccv85dt',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qccv85dt',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What to pack for Tokyo in March?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.85, constraints=3',
          deep_research_consent_needed: 'true',
          complexity_score: '0.80'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'y449ijy5', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'y449ijy5',
        newSlots: {
          city: 'New York',
          originCity: 'NYC',
          destinationCity: 'June from NYC',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        prevSlots: {},
        mergedSlots: {
          city: 'New York',
          originCity: 'NYC',
          destinationCity: 'June from NYC',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'y449ijy5',
        slots: {
          city: 'New York',
          originCity: 'NYC',
          destinationCity: 'June from NYC',
          month: 'June',
          dates: 'June',
          departureDate: 'June'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'r9mb1f47', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'r9mb1f47',
        newSlots: { city: 'Paris', destinationCity: 'do in Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'do in Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'r9mb1f47',
        slots: { city: 'Paris', destinationCity: 'do in Paris' },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'oqtxc2sk', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'oqtxc2sk',
        newSlots: { city: 'Moscow', destinationCity: 'travel somewhere' },
        prevSlots: {},
        mergedSlots: { city: 'Moscow', destinationCity: 'travel somewhere' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '55xp401b', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '55xp401b',
        newSlots: { city: 'Tokyo', destinationCity: 'pack for Tokyo' },
        prevSlots: {},
        mergedSlots: { city: 'Tokyo', destinationCity: 'pack for Tokyo' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'x82ixnun', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'x82ixnun',
        newSlots: { city: 'Paris', destinationCity: 'pack for Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'pack for Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

  ● Router & Memory Integration › maintains intent context for destinations

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at destinationsNode (src/core/graph.ts:1378:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/router.memory.test.ts:34:15)

  ● Router & Memory Integration › maintains intent context for attractions

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/router.memory.test.ts:44:15)

 PASS  tests/custom/security.test.ts
 PASS  tests/custom/simple_api_test.test.ts (17.66 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.log
      Testing handleChat...

      at Object.<anonymous> (tests/custom/simple_api_test.test.ts:8:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'hfvl1nt6', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'hfvl1nt6', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'hfvl1nt6', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'hfvl1nt6', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'hfvl1nt6',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'hfvl1nt6',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'hfvl1nt6',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'hfvl1nt6',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'hfvl1nt6',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.log
      handleChat completed

      at Object.<anonymous> (tests/custom/simple_api_test.test.ts:12:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-123',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-123',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-123',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'xu8u1ob0', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'xu8u1ob0', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'xu8u1ob0', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'xu8u1ob0', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'xu8u1ob0',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'xu8u1ob0',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'xu8u1ob0',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'xu8u1ob0',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'xu8u1ob0',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'Hello',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

 FAIL  tests/custom/tavily_search.test.ts
  ● Tavily Search Adapter › returns results on success

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at Object.<anonymous> (tests/custom/tavily_search.test.ts:26:42)

{"level":20,"time":1757575923503,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Tokyo&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575923826,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575923829,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":294,"duration":332,"msg":"✅ API request successful"}
{"level":20,"time":1757575923834,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","attempt":1,"maxAttempts":4,"url":"https://api.open-meteo.com/v1/forecast?latitude=35.6895&longitude=139.69171&daily=temperature_2m_max...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575924128,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575924133,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","responseSize":581,"duration":304,"msg":"✅ API request successful"}
{"level":20,"time":1757575924139,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=UnknownCity&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575924230,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575924233,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":32,"duration":99,"msg":"✅ API request successful"}
{"level":20,"time":1757575925668,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Tokyo&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575925753,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575925757,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":295,"duration":94,"msg":"✅ API request successful"}
{"level":20,"time":1757575925763,"pid":54374,"hostname":"sicksadmbp","target":"restcountries","attempt":1,"maxAttempts":4,"url":"https://restcountries.com/v3.1/name/Japan?fields=name,currencies,languages,region","msg":"🌐 API request attempt"}
{"level":20,"time":1757575926358,"pid":54374,"hostname":"sicksadmbp","target":"restcountries","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575926360,"pid":54374,"hostname":"sicksadmbp","target":"restcountries","responseSize":206,"duration":603,"msg":"✅ API request successful"}
{"level":20,"time":1757575928612,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=UnknownCity&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575928697,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575928700,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":32,"duration":93,"msg":"✅ API request successful"}
{"level":20,"time":1757575928812,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":2,"url":"https://geocoding-api.open-meteo.com/v1/search?name=UnknownCity&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575928895,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575928898,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":31,"duration":198,"msg":"✅ API request successful"}
{"level":20,"time":1757575929012,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Tokyo&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575929095,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575929100,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":295,"duration":193,"msg":"✅ API request successful"}
{"level":20,"time":1757575929106,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=139.69171&lat=35.6895&radius=4000&format=geojso...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575929441,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575929441,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575929442,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575929444,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
{"level":20,"time":1757575929453,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575929535,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575929537,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":588,"duration":89,"msg":"✅ API request successful"}
{"level":20,"time":1757575929542,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575929621,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575929621,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575929622,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575929624,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
{"level":20,"time":1757575929655,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":4,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Tokyo&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575929738,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575929741,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":294,"duration":116,"msg":"✅ API request successful"}
{"level":20,"time":1757575929745,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","attempt":1,"maxAttempts":4,"url":"https://api.open-meteo.com/v1/forecast?latitude=35.6895&longitude=139.69171&daily=temperature_2m_max...","msg":"🌐 API request attempt"}
 FAIL  tests/custom/tools.test.ts (6.729 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

  ● Tools Layer › Country Facts Tool › handles unknown city gracefully

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at tryCountryFallback (src/tools/country.ts:247:46)
      at getCountryFacts (src/tools/country.ts:36:26)
      at Object.<anonymous> (tests/custom/tools.test.ts:45:22)

  ● Tools Layer › Attractions Tool › returns attractions for known city

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at tryAttractionsFallback (src/tools/attractions.ts:169:46)
      at getAttractions (src/tools/attractions.ts:40:32)
      at Object.<anonymous> (tests/custom/tools.test.ts:63:22)

  ● Tools Layer › Attractions Tool › respects limit parameter

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at tryAttractionsFallback (src/tools/attractions.ts:169:46)
      at getAttractions (src/tools/attractions.ts:40:32)
      at Object.<anonymous> (tests/custom/tools.test.ts:81:22)

 FAIL  tests/custom/transcript-recorder.test.ts
  ● Test suite failed to run

    ENOENT: no such file or directory, open '/Users/sasha/IdeaProjects/navan/root/tests/custom/transcript-recorder.test.ts'

      at runTestInternal (node_modules/jest-runner/build/runTest.js:170:27)

{"level":20,"time":1757575930062,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575930065,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo","responseSize":581,"duration":323,"msg":"✅ API request successful"}
{"level":20,"time":1757575930347,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"🤖 TRANSFORMERS: Loading content classification pipeline"}
{"level":20,"time":1757575930347,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"✅ TRANSFORMERS: Content classification pipeline loaded (child process)"}
{"level":20,"time":1757575931752,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"🤖 TRANSFORMERS: Loading intent classification pipeline"}
{"level":20,"time":1757575931752,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"✅ TRANSFORMERS: Intent classification pipeline loaded (child process)"}
{"level":20,"time":1757575933084,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575933085,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","content_type":"travel","confidence":0.9457142532593613,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575934463,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575934607,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999972209653178}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":38,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.95,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"test-thread","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575934608,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575934609,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.95,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757575934609,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","msg":"router_start"}
{"level":20,"time":1757575934651,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575934652,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575935810,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575935810,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575935810,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575935810,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What are the best restaurants in Paris?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575935810,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575935810,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575936915,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575936915,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575936915,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575936915,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575938145,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575938145,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575938145,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["restaurant","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757575938145,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575938145,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757575938146,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 875 tokens, Format: text"}
{"level":20,"time":1757575938146,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575938537,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 6 tokens"}
{"level":20,"time":1757575938538,"pid":54374,"hostname":"sicksadmbp","original":"What are the best restaurants in Paris?","optimized":"paris restaurants best","intent":"web_search","msg":"🔍 Query optimized with location context"}
{"level":20,"time":1757575938538,"pid":54374,"hostname":"sicksadmbp","original":"What are the best restaurants in Paris?","optimized":"paris restaurants best","wordCount":3,"msg":"query_optimized"}
{"level":20,"time":1757575938539,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"search_query":"paris restaurants best"},"merged":{"search_query":"paris restaurants best"},"intent":"web_search","msg":"slot_merge"}
{"level":20,"time":1757575938539,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757575938539,"pid":54374,"hostname":"sicksadmbp","query":"paris restaurants best","msg":"performing_web_search_node"}
{"level":20,"time":1757575941302,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575941303,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","content_type":"travel","confidence":0.9457142532593613,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575942682,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999981825863098}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":38,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.95,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"test-thread-2","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.95,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757575942683,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","msg":"router_start"}
{"level":20,"time":1757575942684,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575942684,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575943807,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575943808,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575943808,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575943808,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What are the best restaurants in Paris?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575943808,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575943808,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575944553,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575944553,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575944553,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575944553,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575945926,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 45 tokens"}
{"level":20,"time":1757575945926,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": false, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cat","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575945926,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["restaurant","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757575945926,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575945926,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757575945926,"pid":54374,"hostname":"sicksadmbp","intent":"web_search","msg":"Using cached optimized query"}
{"level":20,"time":1757575945927,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"search_query":"paris restaurants best"},"merged":{"search_query":"paris restaurants best"},"intent":"web_search","msg":"slot_merge"}
{"level":20,"time":1757575945927,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757575945927,"pid":54374,"hostname":"sicksadmbp","query":"paris restaurants best","msg":"performing_web_search_node"}
{"level":20,"time":1757575948572,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575948572,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","content_type":"travel","confidence":0.9457142532593613,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575949934,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999976455553009}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":38,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.95,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"test-thread-yes","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.95,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","msg":"router_start"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575949935,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575951335,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 45 tokens"}
{"level":20,"time":1757575951335,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": false, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cat","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575951335,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575951335,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What are the best restaurants in Paris?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575951335,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575951335,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575952346,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575952346,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575952346,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575952346,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575953488,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575953489,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575953489,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["restaurant","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757575953489,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575953489,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757575953489,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 66 tokens, Format: json"}
{"level":20,"time":1757575953489,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575954057,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 10 tokens"}
{"level":20,"time":1757575954057,"pid":54374,"hostname":"sicksadmbp","error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"normalized\"\n    ],\n    \"message\": \"Required\"\n  }\n]","msg":"city_llm_failed"}
{"level":20,"time":1757575954057,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 733 tokens, Format: json"}
{"level":20,"time":1757575954057,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575954919,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 15 tokens"}
{"level":20,"time":1757575954919,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 83 tokens, Format: json"}
{"level":20,"time":1757575954919,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575955667,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757575955668,"pid":54374,"hostname":"sicksadmbp","error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"null\",\n    \"path\": [\n      \"originCity\"\n    ],\n    \"message\": \"Expected string, received null\"\n  }\n]","msg":"od_llm_failed"}
{"level":20,"time":1757575955668,"pid":54374,"hostname":"sicksadmbp","destinationCity":"Paris","msg":"od_regex_fallback"}
{"level":20,"time":1757575955668,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 797 tokens, Format: json"}
{"level":20,"time":1757575955668,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575956430,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 11 tokens"}
{"level":20,"time":1757575956430,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575956430,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575957277,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575957277,"pid":54374,"hostname":"sicksadmbp","step":2,"method":"llm","intent":"attractions","confidence":0.75,"source":"llm_intent_classification","success":true,"msg":"✅ ROUTING_CASCADE: LLM intent classification succeeded"}
{"level":20,"time":1757575957277,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"city":"Paris","destinationCity":"Paris"},"merged":{"city":"Paris","destinationCity":"Paris"},"intent":"attractions","msg":"slot_merge"}
{"level":20,"time":1757575957277,"pid":54374,"hostname":"sicksadmbp","needsCity":true,"hasCity":true,"hasWhen":false,"missing":[],"cityValue":"Paris","msg":"missing_check"}
{"level":20,"time":1757575957283,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575957618,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575957622,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":588,"duration":344,"msg":"✅ API request successful"}
{"level":20,"time":1757575957627,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575957941,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575957942,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575957943,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575957944,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
{"level":40,"time":1757575957944,"pid":54374,"hostname":"sicksadmbp","error":"TypeError: tavily_1.TavilyClient is not a constructor","city":"Paris","msg":"attractions_tool_failed"}
{"level":20,"time":1757575957944,"pid":54374,"hostname":"sicksadmbp","query":"Paris attractions things to do","msg":"performing_web_search_node"}
{"level":20,"time":1757575960692,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575960692,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","content_type":"travel","confidence":0.9457142532593613,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575962043,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999951186126769}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":38,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.95,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"test-thread-no","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.95,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","msg":"router_start"}
{"level":20,"time":1757575962044,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575962045,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575963539,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 45 tokens"}
{"level":20,"time":1757575963540,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": false, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cat","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575963540,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575963540,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What are the best restaurants in Paris?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575963540,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575963540,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575964361,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575964361,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575964361,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575964361,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575965440,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575965440,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575965440,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["restaurant","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757575965440,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575965440,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757575965441,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 66 tokens, Format: json"}
{"level":20,"time":1757575965441,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575966129,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 10 tokens"}
{"level":20,"time":1757575966130,"pid":54374,"hostname":"sicksadmbp","error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"normalized\"\n    ],\n    \"message\": \"Required\"\n  }\n]","msg":"city_llm_failed"}
{"level":20,"time":1757575966130,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 733 tokens, Format: json"}
{"level":20,"time":1757575966130,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575966717,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 15 tokens"}
{"level":20,"time":1757575966717,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 83 tokens, Format: json"}
{"level":20,"time":1757575966717,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575967453,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757575967453,"pid":54374,"hostname":"sicksadmbp","error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"null\",\n    \"path\": [\n      \"originCity\"\n    ],\n    \"message\": \"Expected string, received null\"\n  }\n]","msg":"od_llm_failed"}
{"level":20,"time":1757575967453,"pid":54374,"hostname":"sicksadmbp","destinationCity":"Paris","msg":"od_regex_fallback"}
{"level":20,"time":1757575967453,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 797 tokens, Format: json"}
{"level":20,"time":1757575967453,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575968121,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 11 tokens"}
{"level":20,"time":1757575968122,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575968122,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575969067,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575969068,"pid":54374,"hostname":"sicksadmbp","step":2,"method":"llm","intent":"attractions","confidence":0.75,"source":"llm_intent_classification","success":true,"msg":"✅ ROUTING_CASCADE: LLM intent classification succeeded"}
{"level":20,"time":1757575969068,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"city":"Paris","destinationCity":"Paris"},"merged":{"city":"Paris","destinationCity":"Paris"},"intent":"attractions","msg":"slot_merge"}
{"level":20,"time":1757575969068,"pid":54374,"hostname":"sicksadmbp","needsCity":true,"hasCity":true,"hasWhen":false,"missing":[],"cityValue":"Paris","msg":"missing_check"}
{"level":20,"time":1757575969073,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575969390,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575969393,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":588,"duration":325,"msg":"✅ API request successful"}
{"level":20,"time":1757575969398,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
 FAIL  tests/custom/web_search_consent.test.ts (39.575 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'test-thread', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread',
        newSlots: { search_query: 'paris restaurants best' },
        prevSlots: {},
        mergedSlots: { search_query: 'paris restaurants best' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-2',
        slots: {},
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-2',
        newSlots: { search_query: 'paris restaurants best' },
        prevSlots: {},
        mergedSlots: { search_query: 'paris restaurants best' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: {},
        storeSize: 2,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-yes',
        newSlots: { city: 'Paris', destinationCity: 'Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-yes',
        slots: { city: 'Paris', destinationCity: 'Paris' },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: {},
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'test-thread-no',
        newSlots: { city: 'Paris', destinationCity: 'Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'test-thread-no',
        slots: { city: 'Paris', destinationCity: 'Paris' },
        storeSize: 4,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

  ● Web Search Consent Flow › Consent Response Handling › handles "yes" response and performs search

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:20:29)

  ● Web Search Consent Flow › Consent Response Handling › handles "no" response gracefully

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:56:7)

  ● Web Search Consent Flow › Consent Response Handling › handles various positive consent responses

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:78:9)

  ● Web Search Consent Flow › Consent Response Handling › handles various negative consent responses

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:117:9)

{"level":20,"time":1757575969642,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575969642,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575969643,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575969646,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
{"level":40,"time":1757575969646,"pid":54374,"hostname":"sicksadmbp","error":"TypeError: tavily_1.TavilyClient is not a constructor","city":"Paris","msg":"attractions_tool_failed"}
{"level":20,"time":1757575969646,"pid":54374,"hostname":"sicksadmbp","query":"Paris attractions things to do","msg":"performing_web_search_node"}
{"level":20,"time":1757575969914,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"🤖 TRANSFORMERS: Loading content classification pipeline"}
{"level":20,"time":1757575969914,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"✅ TRANSFORMERS: Content classification pipeline loaded (child process)"}
{"level":20,"time":1757575971238,"pid":54374,"hostname":"sicksadmbp","text":"search web for best restaurants in Paris","content_type":"refinement","confidence":0.6750738345203773,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575971238,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"🤖 TRANSFORMERS: Loading intent classification pipeline"}
{"level":20,"time":1757575971238,"pid":54374,"hostname":"sicksadmbp","model":"Xenova/nli-deberta-v3-base","msg":"✅ TRANSFORMERS: Intent classification pipeline loaded (child process)"}
{"level":20,"time":1757575972618,"pid":54374,"hostname":"sicksadmbp","text":"search web for best restaurants in Paris","intent":"destinations","confidence":0.6994129208288282,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999961365066966}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":40,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"j3a9scih","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575972755,"pid":54374,"hostname":"sicksadmbp","message":"search web for best restaurants in Paris","msg":"router_start"}
{"level":20,"time":1757575972790,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575972790,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575974210,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575974210,"pid":54374,"hostname":"sicksadmbp","message":"search web for best restaurants in Paris","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575974211,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575974211,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"search web for best restaurants in Paris","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575974211,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575974211,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575974856,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757575974857,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575974857,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575974857,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575975869,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575975870,"pid":54374,"hostname":"sicksadmbp","message":"search web for best restaurants in Paris","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575975870,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["restaurant","location"],"strategy":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2","confidence":0.7,"msg":"🚀 COMPLEXITY: Fast detection - COMPLEX"}
{"level":20,"time":1757575975870,"pid":54374,"hostname":"sicksadmbp","isComplex":true,"confidence":0.7,"reasoning":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575975871,"pid":54374,"hostname":"sicksadmbp","intent":"system","reason":"deep_research_consent_needed","msg":"✅ COMPLEXITY: Triggering deep research consent"}
{"level":20,"time":1757575975871,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_deep_research_consent":"true","pending_deep_research_query":"search web for best restaurants in Paris","complexity_reasoning":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2"},"extracted":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"merged":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757575975871,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757575978618,"pid":54374,"hostname":"sicksadmbp","text":"google best hotels in Tokyo","intent":"destinations","confidence":0.4962559858240063,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575978619,"pid":54374,"hostname":"sicksadmbp","text":"google best hotels in Tokyo","content_type":"travel","confidence":0.9760233076978552,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575979987,"pid":54374,"hostname":"sicksadmbp","text":"google best hotels in Tokyo","intent":"destinations","confidence":0.4962559858240063,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575979988,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"af","prob":0.9999960978291331}],"topLanguage":"af","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575979988,"pid":54374,"hostname":"sicksadmbp","language":"af","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":27,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575979988,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575979988,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575979988,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.98,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"tcbdiukr","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.98,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","message":"google best hotels in Tokyo","msg":"router_start"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2318 tokens, Format: json"}
{"level":20,"time":1757575979989,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575981467,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575981467,"pid":54374,"hostname":"sicksadmbp","message":"google best hotels in Tokyo","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575981467,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575981467,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"google best hotels in Tokyo","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575981467,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1603 tokens, Format: json"}
{"level":20,"time":1757575981467,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575982531,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575982531,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575982531,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2318 tokens, Format: json"}
{"level":20,"time":1757575982531,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","message":"google best hotels in Tokyo","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["accommodation","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 870 tokens, Format: text"}
{"level":20,"time":1757575983867,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575984167,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 5 tokens"}
{"level":20,"time":1757575984167,"pid":54374,"hostname":"sicksadmbp","original":"best hotels in Tokyo","optimized":"tokyo hotels best","intent":"web_search","msg":"🔍 Query optimized with location context"}
{"level":20,"time":1757575984167,"pid":54374,"hostname":"sicksadmbp","original":"best hotels in Tokyo","optimized":"tokyo hotels best","wordCount":3,"msg":"query_optimized"}
{"level":20,"time":1757575984167,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"search_query":"tokyo hotels best"},"merged":{"search_query":"tokyo hotels best"},"intent":"web_search","msg":"slot_merge"}
{"level":20,"time":1757575984167,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757575984168,"pid":54374,"hostname":"sicksadmbp","query":"tokyo hotels best","msg":"performing_web_search_node"}
{"level":20,"time":1757575986840,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575986840,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","content_type":"travel","confidence":0.9457142532593613,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757575988177,"pid":54374,"hostname":"sicksadmbp","text":"What are the best restaurants in Paris?","intent":"destinations","confidence":0.5524083463362603,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999973701458719}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":38,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.95,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"eag27u6b","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757575988178,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.95,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757575988179,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","msg":"router_start"}
{"level":20,"time":1757575988179,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575988179,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575989304,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 45 tokens"}
{"level":20,"time":1757575989304,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": false, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cat","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575989304,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757575989304,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What are the best restaurants in Paris?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757575989304,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575989304,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575990425,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575990425,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757575990425,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757575990425,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575991440,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757575991441,"pid":54374,"hostname":"sicksadmbp","message":"What are the best restaurants in Paris?","response":"{\"content_type\": \"restaurant\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"cate","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757575991441,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["restaurant","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757575991441,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757575991441,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757575991441,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 66 tokens, Format: json"}
{"level":20,"time":1757575991441,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575992155,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 10 tokens"}
{"level":20,"time":1757575992155,"pid":54374,"hostname":"sicksadmbp","error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"normalized\"\n    ],\n    \"message\": \"Required\"\n  }\n]","msg":"city_llm_failed"}
{"level":20,"time":1757575992155,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 733 tokens, Format: json"}
{"level":20,"time":1757575992155,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575992723,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 15 tokens"}
{"level":20,"time":1757575992723,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 83 tokens, Format: json"}
{"level":20,"time":1757575992723,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575993873,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757575993874,"pid":54374,"hostname":"sicksadmbp","error":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"null\",\n    \"path\": [\n      \"originCity\"\n    ],\n    \"message\": \"Expected string, received null\"\n  }\n]","msg":"od_llm_failed"}
{"level":20,"time":1757575993874,"pid":54374,"hostname":"sicksadmbp","destinationCity":"Paris","msg":"od_regex_fallback"}
{"level":20,"time":1757575993874,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 797 tokens, Format: json"}
{"level":20,"time":1757575993874,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575994596,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 11 tokens"}
{"level":20,"time":1757575994597,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757575994597,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757575995419,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 21 tokens"}
{"level":20,"time":1757575995419,"pid":54374,"hostname":"sicksadmbp","step":2,"method":"llm","intent":"attractions","confidence":0.75,"source":"llm_intent_classification","success":true,"msg":"✅ ROUTING_CASCADE: LLM intent classification succeeded"}
{"level":20,"time":1757575995419,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"city":"Paris","destinationCity":"Paris"},"merged":{"city":"Paris","destinationCity":"Paris"},"intent":"attractions","msg":"slot_merge"}
{"level":20,"time":1757575995419,"pid":54374,"hostname":"sicksadmbp","needsCity":true,"hasCity":true,"hasWhen":false,"missing":[],"cityValue":"Paris","msg":"missing_check"}
{"level":20,"time":1757575995426,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","attempt":1,"maxAttempts":3,"url":"https://geocoding-api.open-meteo.com/v1/search?name=Paris&count=1&language=en&format=json","msg":"🌐 API request attempt"}
{"level":20,"time":1757575995741,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","status":200,"statusText":"OK","msg":"📡 API response received"}
{"level":20,"time":1757575995745,"pid":54374,"hostname":"sicksadmbp","target":"open-meteo:geocode","responseSize":589,"duration":324,"msg":"✅ API request successful"}
{"level":20,"time":1757575995750,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","attempt":1,"maxAttempts":3,"url":"https://api.opentripmap.com/0.1/en/places/radius?lon=2.3488&lat=48.85341&radius=4000&format=geojson&...","msg":"🌐 API request attempt"}
{"level":20,"time":1757575995989,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"📡 API response received"}
{"level":20,"time":1757575995989,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","status":400,"statusText":"Bad Request","msg":"❌ HTTP error response"}
{"level":20,"time":1757575995990,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","errorText":"{\"error\":\"Unknown category name: museums,cultural,historic,architecture,monuments,castles,palaces,parks,gardens,amusements,viewpoints,bridges,towers,lighthouses,fortifications,archaeological_sites,natural,other,interesting_places (400) - The request could not be understood by the server due to malformed syntax\"}","msg":"📄 Error response body"}
{"level":20,"time":1757575995992,"pid":54374,"hostname":"sicksadmbp","target":"opentripmap","msg":"🔌 Circuit breaker is open"}
{"level":40,"time":1757575995992,"pid":54374,"hostname":"sicksadmbp","error":"TypeError: tavily_1.TavilyClient is not a constructor","city":"Paris","msg":"attractions_tool_failed"}
{"level":20,"time":1757575995992,"pid":54374,"hostname":"sicksadmbp","query":"Paris attractions things to do","msg":"performing_web_search_node"}
{"level":20,"time":1757575998871,"pid":54374,"hostname":"sicksadmbp","text":"How much does it cost to visit Tokyo?","intent":"destinations","confidence":0.647265764707715,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757575998872,"pid":54374,"hostname":"sicksadmbp","text":"How much does it cost to visit Tokyo?","content_type":"travel","confidence":0.9647047735825997,"intent":"destinations","msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576000272,"pid":54374,"hostname":"sicksadmbp","text":"How much does it cost to visit Tokyo?","intent":"destinations","confidence":0.647265764707715,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999975675997124}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":36,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.96,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"ihsh5hxd","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":["budget"],"constraintKey":"budget","complexityClass":"simple","constraintCount":1,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":1,"confidence":0.96,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","message":"How much does it cost to visit Tokyo?","msg":"router_start"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757576000273,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576002302,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576002303,"pid":54374,"hostname":"sicksadmbp","message":"How much does it cost to visit Tokyo?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576002303,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576002303,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"How much does it cost to visit Tokyo?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576002303,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1605 tokens, Format: json"}
{"level":20,"time":1757576002303,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576003512,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 30 tokens"}
{"level":20,"time":1757576003512,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576003512,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2321 tokens, Format: json"}
{"level":20,"time":1757576003512,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576004705,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576004706,"pid":54374,"hostname":"sicksadmbp","message":"How much does it cost to visit Tokyo?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576004706,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["budget","location"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757576004706,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576004706,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757576004707,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 874 tokens, Format: text"}
{"level":20,"time":1757576004707,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576005157,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 7 tokens"}
{"level":20,"time":1757576005157,"pid":54374,"hostname":"sicksadmbp","original":"How much does it cost to visit Tokyo?","optimized":"tokyo travel costs budget","intent":"web_search","msg":"🔍 Query optimized with location context"}
{"level":20,"time":1757576005157,"pid":54374,"hostname":"sicksadmbp","original":"How much does it cost to visit Tokyo?","optimized":"tokyo travel costs budget","wordCount":4,"msg":"query_optimized"}
{"level":20,"time":1757576005158,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{"search_query":"tokyo travel costs budget"},"merged":{"search_query":"tokyo travel costs budget"},"intent":"web_search","msg":"slot_merge"}
{"level":20,"time":1757576005158,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576005158,"pid":54374,"hostname":"sicksadmbp","query":"tokyo travel costs budget","msg":"performing_web_search_node"}
{"level":20,"time":1757576007827,"pid":54374,"hostname":"sicksadmbp","text":"What airlines fly to Barcelona?","intent":"destinations","confidence":0.7784286548384342,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576007828,"pid":54374,"hostname":"sicksadmbp","text":"What airlines fly to Barcelona?","content_type":"travel","confidence":0.984045765400475,"intent":"destinations","msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576009164,"pid":54374,"hostname":"sicksadmbp","text":"What airlines fly to Barcelona?","intent":"destinations","confidence":0.7784286548384342,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999975744863263}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":30,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.98,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"1k6mrvpy","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.98,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","message":"What airlines fly to Barcelona?","msg":"router_start"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576009165,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576010408,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 43 tokens"}
{"level":20,"time":1757576010409,"pid":54374,"hostname":"sicksadmbp","message":"What airlines fly to Barcelona?","response":"{\"content_type\": \"flight\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576010409,"pid":54374,"hostname":"sicksadmbp","contentType":"flight","message":"What airlines fly to Barcelona?","msg":"✈️ FLIGHTS: Content classified as flight, analyzing complexity"}
{"level":20,"time":1757576010409,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 316 tokens, Format: json"}
{"level":20,"time":1757576010409,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576011984,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 58 tokens"}
{"level":20,"time":1757576011984,"pid":54374,"hostname":"sicksadmbp","confidence":0.7,"reasoning":"The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.","msg":"✈️ FLIGHTS: Ambiguous flight query, asking for clarification"}
{"level":20,"time":1757576011987,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_flight_clarification":"true","pending_flight_query":"What airlines fly to Barcelona?","clarification_reasoning":"The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request."},"extracted":{"flight_clarification_needed":"true","ambiguity_reason":"The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.","clarification_options":"direct_search_or_web_research"},"merged":{"awaiting_flight_clarification":"true","pending_flight_query":"What airlines fly to Barcelona?","clarification_reasoning":"The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.","flight_clarification_needed":"true","ambiguity_reason":"The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.","clarification_options":"direct_search_or_web_research"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757576011987,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576014623,"pid":54374,"hostname":"sicksadmbp","text":"search web for hotels in Rome","intent":"destinations","confidence":0.7953003555146234,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576014623,"pid":54374,"hostname":"sicksadmbp","text":"search web for hotels in Rome","content_type":"travel","confidence":0.8898147613083357,"intent":"destinations","msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576015947,"pid":54374,"hostname":"sicksadmbp","text":"search web for hotels in Rome","intent":"destinations","confidence":0.7953003555146234,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999979825037695}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":29,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.89,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"jcsqvcjs","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.89,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","message":"search web for hotels in Rome","msg":"router_start"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576015948,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576017296,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757576017296,"pid":54374,"hostname":"sicksadmbp","message":"search web for hotels in Rome","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576017296,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576017296,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"search web for hotels in Rome","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576017297,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1603 tokens, Format: json"}
{"level":20,"time":1757576017297,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576018023,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757576018023,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576018023,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576018023,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576019116,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757576019117,"pid":54374,"hostname":"sicksadmbp","message":"search web for hotels in Rome","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576019117,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["accommodation","location"],"strategy":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2","confidence":0.7,"msg":"🚀 COMPLEXITY: Fast detection - COMPLEX"}
{"level":20,"time":1757576019117,"pid":54374,"hostname":"sicksadmbp","isComplex":true,"confidence":0.7,"reasoning":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576019117,"pid":54374,"hostname":"sicksadmbp","intent":"system","reason":"deep_research_consent_needed","msg":"✅ COMPLEXITY: Triggering deep research consent"}
{"level":20,"time":1757576019117,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_deep_research_consent":"true","pending_deep_research_query":"search web for hotels in Rome","complexity_reasoning":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2"},"extracted":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"merged":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757576019117,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576020482,"pid":54374,"hostname":"sicksadmbp","text":"search web for nonexistent place","content_type":"refinement","confidence":0.7461295427345402,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576021860,"pid":54374,"hostname":"sicksadmbp","text":"search web for nonexistent place","intent":"unknown","confidence":0.8968726128206991,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999963310319934}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":32,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"v3m59enw","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","message":"search web for nonexistent place","msg":"router_start"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576021861,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576023127,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 37 tokens"}
{"level":20,"time":1757576023127,"pid":54374,"hostname":"sicksadmbp","message":"search web for nonexistent place","response":"{\"content_type\": \"system\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576023127,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576023127,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"search web for nonexistent place","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576023127,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1604 tokens, Format: json"}
{"level":20,"time":1757576023127,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576024058,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757576024059,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576024059,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576024059,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576025116,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 37 tokens"}
{"level":20,"time":1757576025116,"pid":54374,"hostname":"sicksadmbp","message":"search web for nonexistent place","response":"{\"content_type\": \"system\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576025116,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":[],"strategy":"ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0","confidence":0.7,"msg":"🚀 COMPLEXITY: Fast detection - COMPLEX"}
{"level":20,"time":1757576025116,"pid":54374,"hostname":"sicksadmbp","isComplex":true,"confidence":0.7,"reasoning":"ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576025117,"pid":54374,"hostname":"sicksadmbp","intent":"system","reason":"deep_research_consent_needed","msg":"✅ COMPLEXITY: Triggering deep research consent"}
{"level":20,"time":1757576025117,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_deep_research_consent":"true","pending_deep_research_query":"search web for nonexistent place","complexity_reasoning":"ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0"},"extracted":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"merged":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757576025117,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576027817,"pid":54374,"hostname":"sicksadmbp","text":"search web for hotels in Rome","intent":"destinations","confidence":0.7953003555146234,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576027817,"pid":54374,"hostname":"sicksadmbp","text":"search web for hotels in Rome","content_type":"travel","confidence":0.8898147613083357,"intent":"destinations","msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576029207,"pid":54374,"hostname":"sicksadmbp","text":"search web for hotels in Rome","intent":"destinations","confidence":0.7953003555146234,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999976934338586}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":29,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","isBudgetQuery":false,"confidence":0.89,"method":"transformers","msg":"🔍 BUDGET: Transformers classification"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"qfijgo7e","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","isComplexTravelQuery":false,"constraintCount":0,"confidence":0.89,"method":"transformers","msg":"🔍 COMPLEXITY: Transformers classification"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","message":"search web for hotels in Rome","msg":"router_start"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576029208,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576030510,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757576030510,"pid":54374,"hostname":"sicksadmbp","message":"search web for hotels in Rome","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576030511,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576030511,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"search web for hotels in Rome","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576030511,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1603 tokens, Format: json"}
{"level":20,"time":1757576030511,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576031653,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757576031653,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576031653,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576031653,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576032966,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 44 tokens"}
{"level":20,"time":1757576032967,"pid":54374,"hostname":"sicksadmbp","message":"search web for hotels in Rome","response":"{\"content_type\": \"travel\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576032967,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["accommodation","location"],"strategy":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2","confidence":0.7,"msg":"🚀 COMPLEXITY: Fast detection - COMPLEX"}
{"level":20,"time":1757576032967,"pid":54374,"hostname":"sicksadmbp","isComplex":true,"confidence":0.7,"reasoning":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576032967,"pid":54374,"hostname":"sicksadmbp","intent":"system","reason":"deep_research_consent_needed","msg":"✅ COMPLEXITY: Triggering deep research consent"}
{"level":20,"time":1757576032967,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_deep_research_consent":"true","pending_deep_research_query":"search web for hotels in Rome","complexity_reasoning":"ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2"},"extracted":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"merged":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757576032967,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576034301,"pid":54374,"hostname":"sicksadmbp","text":"How do I write JavaScript code?","content_type":"refinement","confidence":0.4844143178133007,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576035678,"pid":54374,"hostname":"sicksadmbp","text":"How do I write JavaScript code?","intent":"unknown","confidence":0.9634082600942638,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576035679,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999968962981228}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576035679,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":30,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576035679,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576035679,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576035679,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"3kb7a9r6","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576035680,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576035680,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576035680,"pid":54374,"hostname":"sicksadmbp","message":"How do I write JavaScript code?","msg":"router_start"}
{"level":20,"time":1757576035680,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576035680,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576036775,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 37 tokens"}
{"level":20,"time":1757576036776,"pid":54374,"hostname":"sicksadmbp","message":"How do I write JavaScript code?","response":"{\"content_type\": \"system\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576036776,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576036776,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"How do I write JavaScript code?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576036776,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1604 tokens, Format: json"}
{"level":20,"time":1757576036776,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576037678,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757576037679,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576037679,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2319 tokens, Format: json"}
{"level":20,"time":1757576037679,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576038781,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 37 tokens"}
{"level":20,"time":1757576038781,"pid":54374,"hostname":"sicksadmbp","message":"How do I write JavaScript code?","response":"{\"content_type\": \"system\", \"is_explicit_search\": true, \"has_mixed_languages\": false, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576038781,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":[],"strategy":"ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0","confidence":0.7,"msg":"🚀 COMPLEXITY: Fast detection - COMPLEX"}
{"level":20,"time":1757576038781,"pid":54374,"hostname":"sicksadmbp","isComplex":true,"confidence":0.7,"reasoning":"ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576038782,"pid":54374,"hostname":"sicksadmbp","intent":"system","reason":"deep_research_consent_needed","msg":"✅ COMPLEXITY: Triggering deep research consent"}
{"level":20,"time":1757576038782,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_deep_research_consent":"true","pending_deep_research_query":"How do I write JavaScript code?","complexity_reasoning":"ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0"},"extracted":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"merged":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757576038782,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576040114,"pid":54374,"hostname":"sicksadmbp","text":"What medicine should I take for headache?","content_type":"system","confidence":0.4193248177849963,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","text":"What medicine should I take for headache?","intent":"unknown","confidence":0.9515723119959381,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.999998241103573}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":40,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"8su6dhgn","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576041479,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576041480,"pid":54374,"hostname":"sicksadmbp","message":"What medicine should I take for headache?","msg":"router_start"}
{"level":20,"time":1757576041480,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2322 tokens, Format: json"}
{"level":20,"time":1757576041480,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576042594,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 38 tokens"}
{"level":20,"time":1757576042594,"pid":54374,"hostname":"sicksadmbp","message":"What medicine should I take for headache?","response":"{\"content_type\": \"unrelated\", \"is_explicit_search\": false, \"has_mixed_languages\": false, \"needs_web_search\": false, \"cat","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576042595,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576042595,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What medicine should I take for headache?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576042595,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1606 tokens, Format: json"}
{"level":20,"time":1757576042595,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576043398,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 19 tokens"}
{"level":20,"time":1757576043398,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576043398,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2322 tokens, Format: json"}
{"level":20,"time":1757576043398,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576044534,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 38 tokens"}
{"level":20,"time":1757576044534,"pid":54374,"hostname":"sicksadmbp","message":"What medicine should I take for headache?","response":"{\"content_type\": \"unrelated\", \"is_explicit_search\": false, \"has_mixed_languages\": false, \"needs_web_search\": false, \"cat","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576044534,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":[],"strategy":"ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0","confidence":0.7,"msg":"🚀 COMPLEXITY: Fast detection - COMPLEX"}
{"level":20,"time":1757576044534,"pid":54374,"hostname":"sicksadmbp","isComplex":true,"confidence":0.7,"reasoning":"ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576044535,"pid":54374,"hostname":"sicksadmbp","intent":"system","reason":"deep_research_consent_needed","msg":"✅ COMPLEXITY: Triggering deep research consent"}
{"level":20,"time":1757576044535,"pid":54374,"hostname":"sicksadmbp","prior":{"awaiting_deep_research_consent":"true","pending_deep_research_query":"What medicine should I take for headache?","complexity_reasoning":"ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0"},"extracted":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"merged":{"deep_research_consent_needed":"true","complexity_score":"0.70"},"intent":"system","msg":"slot_merge"}
{"level":20,"time":1757576044535,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576045964,"pid":54374,"hostname":"sicksadmbp","text":"What is the weather in Llanfairpwllgwyngyllgogeryc","content_type":"refinement","confidence":0.6723104368898906,"msg":"🎯 TRANSFORMERS: Content classified"}
{"level":20,"time":1757576047383,"pid":54374,"hostname":"sicksadmbp","text":"What is the weather in Llanfairpwllgwyngyllgogeryc","intent":"weather","confidence":0.6123685833000333,"msg":"🎯 TRANSFORMERS: Intent classified"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","detectedResults":[{"lang":"en","prob":0.9999977886969763}],"topLanguage":"en","libraryConfidence":0.95,"msg":"🌐 LANGDETECT: Library detection results"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","language":"en","script_type":"latin","has_mixed_languages":false,"confidence":0.95,"textLength":81,"scriptCounts":{"hasCyrillic":false,"hasJapanese":false,"hasLatin":true,"hasArabic":false,"hasChinese":false,"hasHebrew":false},"msg":"🌐 LANGUAGE: Final detection result"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","totalEntities":0,"locations":0,"dates":0,"money":0,"durations":0,"overallConfidence":0.5,"msg":"🔍 NER: Enhanced entity extraction complete"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","threadSlots":{},"awaitingDeepResearch":false,"awaitingSearchConsent":false,"threadId":"honq99g2","msg":"🔍 THREAD: Slots state check"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","msg":"🔍 ENTITY: No cities found via AI methods, skipping regex fallback for better accuracy"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","extractionMethod":"unknown","extractionConfidence":0,"constraintCategories":[],"constraintKey":"none","complexityClass":"simple","constraintCount":0,"routingThreshold":"fallback","msg":"🎯 ROUTING: AI decision metrics"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","msg":"router_start"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576047384,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576048377,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 34 tokens"}
{"level":20,"time":1757576048378,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"needs_web_search\": true, \"categories\": [\"location\", \"time\"], \"c","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576048378,"pid":54374,"hostname":"sicksadmbp","DEEP_RESEARCH_ENABLED":"true","shouldCheckComplexity":true,"msg":"🔧 ROUTER: Environment check"}
{"level":20,"time":1757576048378,"pid":54374,"hostname":"sicksadmbp","deepResearchEnabled":true,"message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","msg":"🔍 COMPLEXITY: Deep research enabled, checking complexity"}
{"level":20,"time":1757576048378,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 1616 tokens, Format: json"}
{"level":20,"time":1757576048378,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576050071,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 72 tokens"}
{"level":20,"time":1757576050071,"pid":54374,"hostname":"sicksadmbp","msg":"🔌 NER: Transformers disabled"}
{"level":20,"time":1757576050071,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576050071,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576051236,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"has_mixed_languages\": true, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","method":"fast_transformers","entities":0,"constraints":["location","time"],"isComplex":false,"msg":"🚀 COMPLEXITY: Fast detection - SIMPLE"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","isComplex":false,"confidence":0.6,"reasoning":"simple: 0 entities, 2 constraints","msg":"🔍 COMPLEXITY: Detection result"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","step":1,"msg":"🤖 ROUTING_CASCADE: Transformers disabled"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","prior":{},"extracted":{},"merged":{},"intent":"unknown","msg":"slot_merge"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","needsCity":false,"hasCity":false,"hasWhen":false,"missing":[],"msg":"missing_check"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576051237,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576052628,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576052628,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"has_mixed_languages\": true, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576052628,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576052628,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576053808,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576053809,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"has_mixed_languages\": true, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576053809,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576053809,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576054907,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576054908,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"has_mixed_languages\": true, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576054908,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576054908,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
{"level":20,"time":1757576056071,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576056071,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"has_mixed_languages\": true, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576056072,"pid":54374,"hostname":"sicksadmbp","msg":"🤖 LLM Call - Input: 2332 tokens, Format: json"}
{"level":20,"time":1757576056072,"pid":54374,"hostname":"sicksadmbp","msg":"🔗 Trying model: google/gemma-3n-e4b-it at https://openrouter.ai/api/v1"}
 FAIL  tests/custom/web_search_fallback.test.ts (87.898 s)
  ● Console

    console.log
      🔧 Transformers.js configured for offline mode: {
        localModelPath: '/Users/sasha/IdeaProjects/navan/root/models',
        allowRemoteModels: false
      }

      at Object.<anonymous> (src/core/transformers-env.ts:21:11)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'j3a9scih', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'j3a9scih', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'j3a9scih', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'j3a9scih', slots: {}, storeSize: 0, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'j3a9scih',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'j3a9scih',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'j3a9scih',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'j3a9scih',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'j3a9scih',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for best restaurants in Paris',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 1,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'tcbdiukr', slots: {}, storeSize: 1, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'tcbdiukr',
        newSlots: { search_query: 'tokyo hotels best' },
        prevSlots: {},
        mergedSlots: { search_query: 'tokyo hotels best' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'eag27u6b', slots: {}, storeSize: 2, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'eag27u6b',
        newSlots: { city: 'Paris', destinationCity: 'Paris' },
        prevSlots: {},
        mergedSlots: { city: 'Paris', destinationCity: 'Paris' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'eag27u6b',
        slots: { city: 'Paris', destinationCity: 'Paris' },
        storeSize: 3,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'ihsh5hxd', slots: {}, storeSize: 3, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'ihsh5hxd',
        newSlots: { search_query: 'tokyo travel costs budget' },
        prevSlots: {},
        mergedSlots: { search_query: 'tokyo travel costs budget' },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '1k6mrvpy', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '1k6mrvpy', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '1k6mrvpy', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '1k6mrvpy', slots: {}, storeSize: 4, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '1k6mrvpy',
        newSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '1k6mrvpy',
        slots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.'
        },
        storeSize: 5,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '1k6mrvpy',
        slots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.'
        },
        storeSize: 5,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '1k6mrvpy',
        newSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.',
          flight_clarification_needed: 'true',
          ambiguity_reason: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.',
          clarification_options: 'direct_search_or_web_research'
        },
        prevSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.'
        },
        mergedSlots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.',
          flight_clarification_needed: 'true',
          ambiguity_reason: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.',
          clarification_options: 'direct_search_or_web_research'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '1k6mrvpy',
        slots: {
          awaiting_flight_clarification: 'true',
          pending_flight_query: 'What airlines fly to Barcelona?',
          clarification_reasoning: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.',
          flight_clarification_needed: 'true',
          ambiguity_reason: 'The query asks about airlines serving a destination, but lacks specific origin or travel dates. This suggests an exploratory search rather than a direct flight booking request.',
          clarification_options: 'direct_search_or_web_research'
        },
        storeSize: 5,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'jcsqvcjs', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'jcsqvcjs', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'jcsqvcjs', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'jcsqvcjs', slots: {}, storeSize: 5, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'jcsqvcjs',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'jcsqvcjs',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        storeSize: 6,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'jcsqvcjs',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        storeSize: 6,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'jcsqvcjs',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'jcsqvcjs',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 6,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'v3m59enw', slots: {}, storeSize: 6, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'v3m59enw', slots: {}, storeSize: 6, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'v3m59enw', slots: {}, storeSize: 6, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'v3m59enw', slots: {}, storeSize: 6, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'v3m59enw',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'v3m59enw',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 7,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'v3m59enw',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 7,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'v3m59enw',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'v3m59enw',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for nonexistent place',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 7,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qfijgo7e', slots: {}, storeSize: 7, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qfijgo7e', slots: {}, storeSize: 7, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qfijgo7e', slots: {}, storeSize: 7, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'qfijgo7e', slots: {}, storeSize: 7, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'qfijgo7e',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qfijgo7e',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        storeSize: 8,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qfijgo7e',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        storeSize: 8,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'qfijgo7e',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: 'qfijgo7e',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'search web for hotels in Rome',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.4, constraints=2',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 8,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3kb7a9r6', slots: {}, storeSize: 8, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3kb7a9r6', slots: {}, storeSize: 8, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3kb7a9r6', slots: {}, storeSize: 8, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '3kb7a9r6', slots: {}, storeSize: 8, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '3kb7a9r6',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '3kb7a9r6',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 9,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '3kb7a9r6',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        storeSize: 9,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '3kb7a9r6',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '3kb7a9r6',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'How do I write JavaScript code?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.3, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 9,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '8su6dhgn', slots: {}, storeSize: 9, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '8su6dhgn', slots: {}, storeSize: 9, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '8su6dhgn', slots: {}, storeSize: 9, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: '8su6dhgn', slots: {}, storeSize: 9, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '8su6dhgn',
        newSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0'
        },
        prevSlots: {},
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '8su6dhgn',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0'
        },
        storeSize: 10,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '8su6dhgn',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0'
        },
        storeSize: 10,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: '8su6dhgn',
        newSlots: { deep_research_consent_needed: 'true', complexity_score: '0.70' },
        prevSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0'
        },
        mergedSlots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots {
        threadId: '8su6dhgn',
        slots: {
          awaiting_deep_research_consent: 'true',
          pending_deep_research_query: 'What medicine should I take for headache?',
          complexity_reasoning: 'ai_confidence_low_or_many_constraints: confidence=0.35, constraints=0',
          deep_research_consent_needed: 'true',
          complexity_score: '0.70'
        },
        storeSize: 10,
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: getThreadSlots { threadId: 'honq99g2', slots: {}, storeSize: 10, isCliMode: false }

      at debugLog (src/core/slot_memory.ts:10:13)

    console.debug
      🔧 SLOTS: updateThreadSlots {
        threadId: 'honq99g2',
        newSlots: {},
        prevSlots: {},
        mergedSlots: {},
        isCliMode: false
      }

      at debugLog (src/core/slot_memory.ts:10:13)

  ● Web Search Fallback › Explicit Search Commands › handles "search web for" command

    expect(received).toContain(expected) // indexOf

    Expected substring: "Based on web search results"
    Received string:    "Which city and what dates are you planning to travel to?"

      37 |       );
      38 |
    > 39 |       expect(result.reply).toContain('Based on web search results');
         |                            ^
      40 |       expect(result.reply).toContain('Best Restaurants in Paris');
      41 |       expect(result.citations).toContain('Brave Search');
      42 |     });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:39:28)

  ● Web Search Fallback › Explicit Search Commands › handles "google" command

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:60:22)

  ● Web Search Fallback › Travel-Related Unknown Intent with Consent › offers web search for restaurant questions

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:73:22)

  ● Web Search Fallback › Travel-Related Unknown Intent with Consent › offers web search for budget questions

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:83:22)

  ● Web Search Fallback › Travel-Related Unknown Intent with Consent › offers web search for flight questions

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 1
    + Received  + 8

    - I can search the web to find current flight and airline information. Would you like me to do that?
    + I can help you with flights in two ways:
    +
    + • **Direct flight search** - Find specific flights with prices and times (e.g., "flights from NYC to London in March")
    + • **Travel planning research** - Get comprehensive travel advice including flight options, tips, and recommendations
    +
    + Which would you prefer for your query: "What airlines fly to Barcelona?"?
    +
    + You can say "direct search" for flight booking or "travel research" for broader planning help.

       96 |       );
       97 |
    >  98 |       expect(result.reply).toBe('I can search the web to find current flight and airline information. Would you like me to do that?');
          |                            ^
       99 |       expect(result.citations).toBeUndefined();
      100 |     });
      101 |   });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:98:28)

  ● Web Search Fallback › Search Failure Handling › handles API failure gracefully

    expect(received).toContain(expected) // indexOf

    Expected substring: "unable to search the web right now"
    Received string:    "Which city and what dates are you planning to travel to?"

      113 |       );
      114 |
    > 115 |       expect(result.reply).toContain('unable to search the web right now');
          |                            ^
      116 |       expect(result.reply).toContain('weather, destinations, packing, or attractions');
      117 |       expect(result.citations).toBeUndefined();
      118 |     });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:115:28)

  ● Web Search Fallback › Search Failure Handling › handles empty search results

    expect(received).toContain(expected) // indexOf

    Expected substring: "couldn't find relevant information"
    Received string:    "Which city and what dates are you planning to travel to?"

      133 |       );
      134 |
    > 135 |       expect(result.reply).toContain('couldn\'t find relevant information');
          |                            ^
      136 |       expect(result.reply).toContain('weather, destinations, packing, or attractions');
      137 |       expect(result.citations).toBeUndefined();
      138 |     });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:135:28)

  ● Web Search Fallback › Search Failure Handling › handles missing API key

    expect(received).toContain(expected) // indexOf

    Expected substring: "unable to search the web right now"
    Received string:    "Which city and what dates are you planning to travel to?"

      146 |       );
      147 |
    > 148 |       expect(result.reply).toContain('unable to search the web right now');
          |                            ^
      149 |       expect(result.citations).toBeUndefined();
      150 |     });
      151 |   });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:148:28)

  ● Web Search Fallback › Non-Travel Questions › rejects programming questions

    expect(received).toContain(expected) // indexOf

    Expected substring: "travel assistant focused on helping with weather, destinations, packing, and attractions"
    Received string:    "Which city and what dates are you planning to travel to?"

      158 |       );
      159 |
    > 160 |       expect(result.reply).toContain('travel assistant focused on helping with weather, destinations, packing, and attractions');
          |                            ^
      161 |       expect(result.citations).toBeUndefined();
      162 |     });
      163 |

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:160:28)

  ● Web Search Fallback › Non-Travel Questions › rejects medical questions

    expect(received).toContain(expected) // indexOf

    Expected substring: "travel assistant focused on helping with weather, destinations, packing, and attractions"
    Received string:    "Which city and what dates are you planning to travel to?"

      168 |       );
      169 |
    > 170 |       expect(result.reply).toContain('travel assistant focused on helping with weather, destinations, packing, and attractions');
          |                            ^
      171 |       expect(result.citations).toBeUndefined();
      172 |     });
      173 |   });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:170:28)

  ● Web Search Fallback › Edge Cases › handles empty messages

    expect(received).toContain(expected) // indexOf

    Expected substring: "I need more information"
    Received string:    "I'm a travel assistant. Please share a travel question (weather, destinations, packing, or attractions)."

      180 |       );
      181 |
    > 182 |       expect(result.reply).toContain('I need more information');
          |                            ^
      183 |       expect(result.citations).toBeUndefined();
      184 |     });
      185 |

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:182:28)

  ● Web Search Fallback › Edge Cases › handles emoji-only messages

    expect(received).toContain(expected) // indexOf

    Expected substring: "can't interpret emoji-only messages"
    Received string:    "I'm a travel assistant. Please share a travel question (weather, destinations, packing, or attractions)."

      190 |       );
      191 |
    > 192 |       expect(result.reply).toContain('can\'t interpret emoji-only messages');
          |                            ^
      193 |       expect(result.citations).toBeUndefined();
      194 |     });
      195 |

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:192:28)

Summary of all failing tests
 FAIL  tests/custom/api_or_cli.test.ts
  ● Test suite failed to run

    tests/custom/api_or_cli.test.ts:4:24 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

    4 import { router } from '../../src/api/routes.ts';
                             ~~~~~~~~~~~~~~~~~~~~~~~~~
    tests/custom/api_or_cli.test.ts:5:28 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

    5 import { handleChat } from '../../src/core/blend.ts';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

 FAIL  tests/custom/brave_search_fallback.test.ts (64.014 s)
  ● Brave Search Fallback Tests › Weather Fallback › falls back to Brave Search when weather API fails

    expect(received).toContain(expected) // indexOf

    Expected substring: "Tokyo"
    Received string:    "When are you planning to travel?"

      61 |         .expect(200);
      62 |     
    > 63 |       expect(response.body.reply).toContain('Tokyo');
         |                                   ^
      64 |       expect(response.body.reply).toContain('25');
      65 |       expect(response.body.citations).toContain('Brave Search');
      66 |     }, 45000);

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:63:35)

  ● Brave Search Fallback Tests › Country Facts Fallback › falls back to Brave Search when country API fails

    expected 200 "OK", got 500 "Internal Server Error"

       97 |         .post('/chat')
       98 |         .send({ message: 'Where should I go in June from Tokyo?', threadId: 'test-country-fallback' })
    >  99 |         .expect(200);
          |          ^
      100 |
      101 |       expect(response.body.reply).toContain('Japan');
      102 |       expect(response.body.citations).toContain('Brave Search');

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:99:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:309:14)
      at node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:342:13)
      at Test.assert (node_modules/supertest/lib/test.js:195:23)
      at localAssert (node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (node_modules/supertest/lib/test.js:152:11)

  ● Brave Search Fallback Tests › Attractions Fallback › falls back to Brave Search when attractions API fails

    expected 200 "OK", got 500 "Internal Server Error"

      136 |         .post('/chat')
      137 |         .send({ message: 'What to do in Paris?' })
    > 138 |         .expect(200);
          |          ^
      139 |     
      140 |       expect(response.body.reply).toContain('Paris');
      141 |       expect(response.body.citations).toContain('Brave Search');

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:138:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:309:14)
      at node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:342:13)
      at Test.assert (node_modules/supertest/lib/test.js:195:23)
      at localAssert (node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (node_modules/supertest/lib/test.js:152:11)

  ● Brave Search Fallback Tests › Enhanced Retry Strategy › retries with exponential backoff before falling back

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 1

      169 |         .expect(200);
      170 |     
    > 171 |       expect(attemptCount).toBe(3); // Should have retried 3 times
          |                            ^
      172 |       expect(response.body.reply).toContain('25°C');
      173 |       expect(response.body.citations).toContain('Open-Meteo');
      174 |     }, 20000);

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:171:28)

  ● Brave Search Fallback Tests › Multiple API Failures › handles multiple API failures with appropriate fallbacks

    expected 200 "OK", got 500 "Internal Server Error"

      210 |         .post('/chat')
      211 |         .send({ message: 'Where should I go in June from Tokyo?', threadId: 'test-multiple-fallback' })
    > 212 |         .expect(200);
          |          ^
      213 |     
      214 |       expect(response.body.reply).toContain('Tokyo');
      215 |       expect(response.body.citations).toContain('Brave Search');

      at Object.<anonymous> (tests/custom/brave_search_fallback.test.ts:212:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:309:14)
      at node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:342:13)
      at Test.assert (node_modules/supertest/lib/test.js:195:23)
      at localAssert (node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (node_modules/supertest/lib/test.js:152:11)

 FAIL  tests/custom/brave_search.test.ts
  ● Brave Search Adapter › searchTravelInfo › handles API failure

    expect(received).toContain(expected) // indexOf

    Expected value: "unknown_error"
    Received array: ["http_5xx", "http_4xx", "network", "timeout", "circuit_open"]

      52 |       expect(result.ok).toBe(false);
      53 |       if (!result.ok) {
    > 54 |         expect(['http_5xx', 'http_4xx', 'network', 'timeout', 'circuit_open']).toContain(result.reason);
         |                                                                                ^
      55 |       }
      56 |     });
      57 |

      at Object.<anonymous> (tests/custom/brave_search.test.ts:54:80)

  ● Brave Search Adapter › extractCountryFromResults › extracts country information from results

    expect(received).toContain(expected) // indexOf

    Expected substring: "Yen"
    Received string:    "Japan: Japanese language, Japanese yen (JPY) currency"

      138 |       expect(country).toContain('Japan');
      139 |       expect(country).toContain('Japan');
    > 140 |       expect(country).toContain('Yen');
          |                       ^
      141 |     });
      142 |
      143 |     test('returns null when no country info found', async () => {

      at Object.<anonymous> (tests/custom/brave_search.test.ts:140:23)

 FAIL  tests/custom/flight_clarification.test.ts (20.442 s)
  ● Flight Query Complexity and Clarification › should route complex travel query to web search

    expect(received).toBe(expected) // Object.is equality

    Expected: "web_search"
    Received: "system"

      25 |     });
      26 |
    > 27 |     expect(result.intent).toBe('web_search');
         |                           ^
      28 |     expect(result.needExternal).toBe(true);
      29 |     expect(result.confidence).toBeGreaterThan(0.7);
      30 |   });

      at Object.<anonymous> (tests/custom/flight_clarification.test.ts:27:27)

  ● Flight Query Complexity and Clarification › should handle direct search clarification response

    expect(received).toBe(expected) // Object.is equality

    Expected: "flights"
    Received: "system"

      57 |     });
      58 |
    > 59 |     expect(result.intent).toBe('flights');
         |                           ^
      60 |     expect(result.needExternal).toBe(true);
      61 |     
      62 |     // Check that clarification state is cleared

      at Object.<anonymous> (tests/custom/flight_clarification.test.ts:59:27)

  ● Flight Query Complexity and Clarification › should handle travel research clarification response

    expect(received).toBe(expected) // Object.is equality

    Expected: "web_search"
    Received: "flights"

      80 |     });
      81 |
    > 82 |     expect(result.intent).toBe('web_search');
         |                           ^
      83 |     expect(result.needExternal).toBe(true);
      84 |     expect(result.slots.search_query).toBe('trip to europe with family');
      85 |     

      at Object.<anonymous> (tests/custom/flight_clarification.test.ts:82:27)

 FAIL  tests/custom/graph-optimization.test.ts
  ● Test suite failed to run

    tests/custom/graph-optimization.test.ts:54:49 - error TS2820: Type '"location"' is not assignable to type '"LOCATION" | "DATE" | "TIME" | "MONEY" | "DURATION" | "PERSON" | "ORGANIZATION" | "MISC"'. Did you mean '"LOCATION"'?

    54       locations: [{ text: 'Paris', score: 0.95, entity_type: 'location', confidence_score: 0.95, entity_group: 'LOC' }],
                                                       ~~~~~~~~~~~

      src/core/ner-enhanced.ts:5:3
        5   entity_type: 'LOCATION' | 'DATE' | 'TIME' | 'MONEY' | 'DURATION' | 'PERSON' | 'ORGANIZATION' | 'MISC';
            ~~~~~~~~~~~
        The expected type comes from property 'entity_type' which is declared here on type 'EnhancedEntity'
    tests/custom/graph-optimization.test.ts:65:43 - error TS2345: Argument of type '{ log: { info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }; }' is not assignable to parameter of type '{ log: Logger<never, boolean>; onStatus?: ((status: string) => void) | undefined; }'.
      Types of property 'log' are incompatible.
        Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'Logger<never, boolean>'.
          Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'BaseLogger'.
            Types of property 'level' are incompatible.
              Type 'number' is not assignable to type 'LevelWithSilentOrString'.

    65     await runGraphTurn(message, threadId, mockLogger);
                                                 ~~~~~~~~~~
    tests/custom/graph-optimization.test.ts:75:43 - error TS2345: Argument of type '{ log: { info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }; }' is not assignable to parameter of type '{ log: Logger<never, boolean>; onStatus?: ((status: string) => void) | undefined; }'.
      Types of property 'log' are incompatible.
        Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'Logger<never, boolean>'.
          Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'BaseLogger'.
            Types of property 'level' are incompatible.
              Type 'number' is not assignable to type 'LevelWithSilentOrString'.

    75     await runGraphTurn(message, threadId, mockLogger);
                                                 ~~~~~~~~~~
    tests/custom/graph-optimization.test.ts:88:49 - error TS2820: Type '"location"' is not assignable to type '"LOCATION" | "DATE" | "TIME" | "MONEY" | "DURATION" | "PERSON" | "ORGANIZATION" | "MISC"'. Did you mean '"LOCATION"'?

    88       locations: [{ text: 'Tokyo', score: 0.95, entity_type: 'location', confidence_score: 0.95, entity_group: 'LOC' }],
                                                       ~~~~~~~~~~~

      src/core/ner-enhanced.ts:5:3
        5   entity_type: 'LOCATION' | 'DATE' | 'TIME' | 'MONEY' | 'DURATION' | 'PERSON' | 'ORGANIZATION' | 'MISC';
            ~~~~~~~~~~~
        The expected type comes from property 'entity_type' which is declared here on type 'EnhancedEntity'
    tests/custom/graph-optimization.test.ts:97:58 - error TS2345: Argument of type '{ log: { info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }; }' is not assignable to parameter of type '{ log: Logger<never, boolean>; onStatus?: ((status: string) => void) | undefined; }'.
      Types of property 'log' are incompatible.
        Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'Logger<never, boolean>'.
          Type '{ info: Mock<UnknownFunction>; debug: Mock<UnknownFunction>; warn: Mock<UnknownFunction>; error: Mock<UnknownFunction>; ... 8 more ...; levelVal: number; }' is not assignable to type 'BaseLogger'.
            Types of property 'level' are incompatible.
              Type 'number' is not assignable to type 'LevelWithSilentOrString'.

    97     const result = await runGraphTurn(message, threadId, mockLogger);
                                                                ~~~~~~~~~~

 FAIL  tests/custom/graph.test.ts (50.143 s)
  ● Agent Graph › destinations intent with city and month

    thrown: "Exceeded timeout of 10000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

       5 |
       6 | describe('Agent Graph', () => {
    >  7 |   test('destinations intent with city and month', async () => {
         |   ^
       8 |     const result = await runGraphTurn('Where should I go in Tokyo in June?', 'test-thread', mockLogger);
       9 |     expect(result).toHaveProperty('done', true);
      10 |     expect(result).toHaveProperty('reply');

      at tests/custom/graph.test.ts:7:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

  ● Agent Graph › packing intent with city and month

    thrown: "Exceeded timeout of 10000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      17 |   }, 10000);
      18 |
    > 19 |   test('packing intent with city and month', async () => {
         |   ^
      20 |     const result = await runGraphTurn('What to pack for Tokyo in March?', 'test-thread', mockLogger);
      21 |     expect(result).toHaveProperty('done', true);
      22 |     expect(result).toHaveProperty('reply');

      at tests/custom/graph.test.ts:19:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

  ● Agent Graph › attractions intent with city

    thrown: "Exceeded timeout of 10000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      29 |   }, 10000);
      30 |
    > 31 |   test('attractions intent with city', async () => {
         |   ^
      32 |     const result = await runGraphTurn('What to do in Barcelona?', 'test-thread', mockLogger);
      33 |     expect(result).toHaveProperty('done', true);
      34 |     expect(result).toHaveProperty('reply');

      at tests/custom/graph.test.ts:31:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

  ● Agent Graph › unknown intent returns clarification

    TypeError: ctx.log.info is not a function

      458 |   // Handle consent responses for deep research (higher priority)
      459 |   if (currentAwaitingDeepResearch && currentPendingDeepResearchQuery) {
    > 460 |     ctx.log.info({ 
          |             ^
      461 |       awaitingDeepResearch: currentAwaitingDeepResearch, 
      462 |       pendingDeepResearchQuery: currentPendingDeepResearchQuery, 
      463 |       message,

      at runGraphTurn (src/core/graph.ts:460:13)
      at Object.<anonymous> (tests/custom/graph.test.ts:44:20)

  ● Agent Graph › follow-up context handling

    thrown: "Exceeded timeout of 15000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      53 |   }, 10000);
      54 |
    > 55 |   test('follow-up context handling', async () => {
         |   ^
      56 |     const threadId = 'test-context-thread';
      57 |     
      58 |     // First query

      at tests/custom/graph.test.ts:55:3
      at Object.<anonymous> (tests/custom/graph.test.ts:6:1)

 FAIL  tests/custom/opentripmap.test.ts
  ● OpenTripMap adapter › handles missing API key

    expect(received).toBe(expected) // Object.is equality

    Expected: "missing_api_key"
    Received: "network"

      37 |     const res = await searchPOIs({ lat: 0, lon: 0 });
      38 |     expect(res.ok).toBe(false);
    > 39 |     if (!res.ok) expect(res.reason).toBe('missing_api_key');
         |                                     ^
      40 |   });
      41 | });
      42 |

      at Object.<anonymous> (tests/custom/opentripmap.test.ts:39:37)

 FAIL  tests/custom/packing.test.ts
  ● Test suite failed to run

    Configuration error:
    
    Could not locate module ../src/tools/weather.js mapped as:
    $1.
    
    Please check your configuration for these entries:
    {
      "moduleNameMapper": {
        "/^(\.{1,2}\/.*)\.js$/": "$1"
      },
      "resolver": undefined
    }

      1 | import pino from 'pino';
      2 |
    > 3 | jest.mock('../src/tools/weather.js', () => ({
        |      ^
      4 |   getWeather: async () => ({ ok: true, summary: 'High 30°C / Low 22°C; precip prob 20%' })
      5 | }));
      6 | jest.mock('../src/tools/country.js', () => ({

      at createNoMappedModuleFoundError (node_modules/jest-resolve/build/resolver.js:759:17)
      at Object.<anonymous> (tests/custom/packing.test.ts:3:6)

 FAIL  tests/custom/router.memory.test.ts (77.5 s)
  ● Router & Memory Integration › maintains intent context for destinations

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at destinationsNode (src/core/graph.ts:1378:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/router.memory.test.ts:34:15)

  ● Router & Memory Integration › maintains intent context for attractions

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/router.memory.test.ts:44:15)

 FAIL  tests/custom/tavily_search.test.ts
  ● Tavily Search Adapter › returns results on success

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at Object.<anonymous> (tests/custom/tavily_search.test.ts:26:42)

 FAIL  tests/custom/tools.test.ts (6.729 s)
  ● Tools Layer › Country Facts Tool › handles unknown city gracefully

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at tryCountryFallback (src/tools/country.ts:247:46)
      at getCountryFacts (src/tools/country.ts:36:26)
      at Object.<anonymous> (tests/custom/tools.test.ts:45:22)

  ● Tools Layer › Attractions Tool › returns attractions for known city

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at tryAttractionsFallback (src/tools/attractions.ts:169:46)
      at getAttractions (src/tools/attractions.ts:40:32)
      at Object.<anonymous> (tests/custom/tools.test.ts:63:22)

  ● Tools Layer › Attractions Tool › respects limit parameter

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at tryAttractionsFallback (src/tools/attractions.ts:169:46)
      at getAttractions (src/tools/attractions.ts:40:32)
      at Object.<anonymous> (tests/custom/tools.test.ts:81:22)

 FAIL  tests/custom/transcript-recorder.test.ts
  ● Test suite failed to run

    ENOENT: no such file or directory, open '/Users/sasha/IdeaProjects/navan/root/tests/custom/transcript-recorder.test.ts'

      at runTestInternal (node_modules/jest-runner/build/runTest.js:170:27)

 FAIL  tests/custom/web_search_consent.test.ts (39.575 s)
  ● Web Search Consent Flow › Consent Response Handling › handles "yes" response and performs search

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:20:29)

  ● Web Search Consent Flow › Consent Response Handling › handles "no" response gracefully

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:56:7)

  ● Web Search Consent Flow › Consent Response Handling › handles various positive consent responses

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:78:9)

  ● Web Search Consent Flow › Consent Response Handling › handles various negative consent responses

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_consent.test.ts:117:9)

 FAIL  tests/custom/web_search_fallback.test.ts (87.898 s)
  ● Web Search Fallback › Explicit Search Commands › handles "search web for" command

    expect(received).toContain(expected) // indexOf

    Expected substring: "Based on web search results"
    Received string:    "Which city and what dates are you planning to travel to?"

      37 |       );
      38 |
    > 39 |       expect(result.reply).toContain('Based on web search results');
         |                            ^
      40 |       expect(result.reply).toContain('Best Restaurants in Paris');
      41 |       expect(result.citations).toContain('Brave Search');
      42 |     });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:39:28)

  ● Web Search Fallback › Explicit Search Commands › handles "google" command

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:60:22)

  ● Web Search Fallback › Travel-Related Unknown Intent with Consent › offers web search for restaurant questions

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at attractionsNode (src/core/graph.ts:1461:12)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:73:22)

  ● Web Search Fallback › Travel-Related Unknown Intent with Consent › offers web search for budget questions

    TypeError: tavily_1.TavilyClient is not a constructor

      27 |     return { ok: false, reason: 'no_api_key' };
      28 |   }
    > 29 |   const client = new TavilyClient({ apiKey });
         |                  ^
      30 |   try {
      31 |     const start = Date.now();
      32 |     const res = await tavilyCircuitBreaker.execute(() =>

      at searchTravelInfo (src/tools/tavily_search.ts:29:18)
      at searchTravelInfo (src/tools/search.ts:33:19)
      at performWebSearchNode (src/core/graph.ts:1702:46)
      at webSearchNode (src/core/graph.ts:1692:16)
      at runGraphTurn (src/core/graph.ts:1215:14)
      at handleChat (src/core/blend.ts:292:18)
      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:83:22)

  ● Web Search Fallback › Travel-Related Unknown Intent with Consent › offers web search for flight questions

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 1
    + Received  + 8

    - I can search the web to find current flight and airline information. Would you like me to do that?
    + I can help you with flights in two ways:
    +
    + • **Direct flight search** - Find specific flights with prices and times (e.g., "flights from NYC to London in March")
    + • **Travel planning research** - Get comprehensive travel advice including flight options, tips, and recommendations
    +
    + Which would you prefer for your query: "What airlines fly to Barcelona?"?
    +
    + You can say "direct search" for flight booking or "travel research" for broader planning help.

       96 |       );
       97 |
    >  98 |       expect(result.reply).toBe('I can search the web to find current flight and airline information. Would you like me to do that?');
          |                            ^
       99 |       expect(result.citations).toBeUndefined();
      100 |     });
      101 |   });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:98:28)

  ● Web Search Fallback › Search Failure Handling › handles API failure gracefully

    expect(received).toContain(expected) // indexOf

    Expected substring: "unable to search the web right now"
    Received string:    "Which city and what dates are you planning to travel to?"

      113 |       );
      114 |
    > 115 |       expect(result.reply).toContain('unable to search the web right now');
          |                            ^
      116 |       expect(result.reply).toContain('weather, destinations, packing, or attractions');
      117 |       expect(result.citations).toBeUndefined();
      118 |     });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:115:28)

  ● Web Search Fallback › Search Failure Handling › handles empty search results

    expect(received).toContain(expected) // indexOf

    Expected substring: "couldn't find relevant information"
    Received string:    "Which city and what dates are you planning to travel to?"

      133 |       );
      134 |
    > 135 |       expect(result.reply).toContain('couldn\'t find relevant information');
          |                            ^
      136 |       expect(result.reply).toContain('weather, destinations, packing, or attractions');
      137 |       expect(result.citations).toBeUndefined();
      138 |     });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:135:28)

  ● Web Search Fallback › Search Failure Handling › handles missing API key

    expect(received).toContain(expected) // indexOf

    Expected substring: "unable to search the web right now"
    Received string:    "Which city and what dates are you planning to travel to?"

      146 |       );
      147 |
    > 148 |       expect(result.reply).toContain('unable to search the web right now');
          |                            ^
      149 |       expect(result.citations).toBeUndefined();
      150 |     });
      151 |   });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:148:28)

  ● Web Search Fallback › Non-Travel Questions › rejects programming questions

    expect(received).toContain(expected) // indexOf

    Expected substring: "travel assistant focused on helping with weather, destinations, packing, and attractions"
    Received string:    "Which city and what dates are you planning to travel to?"

      158 |       );
      159 |
    > 160 |       expect(result.reply).toContain('travel assistant focused on helping with weather, destinations, packing, and attractions');
          |                            ^
      161 |       expect(result.citations).toBeUndefined();
      162 |     });
      163 |

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:160:28)

  ● Web Search Fallback › Non-Travel Questions › rejects medical questions

    expect(received).toContain(expected) // indexOf

    Expected substring: "travel assistant focused on helping with weather, destinations, packing, and attractions"
    Received string:    "Which city and what dates are you planning to travel to?"

      168 |       );
      169 |
    > 170 |       expect(result.reply).toContain('travel assistant focused on helping with weather, destinations, packing, and attractions');
          |                            ^
      171 |       expect(result.citations).toBeUndefined();
      172 |     });
      173 |   });

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:170:28)

  ● Web Search Fallback › Edge Cases › handles empty messages

    expect(received).toContain(expected) // indexOf

    Expected substring: "I need more information"
    Received string:    "I'm a travel assistant. Please share a travel question (weather, destinations, packing, or attractions)."

      180 |       );
      181 |
    > 182 |       expect(result.reply).toContain('I need more information');
          |                            ^
      183 |       expect(result.citations).toBeUndefined();
      184 |     });
      185 |

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:182:28)

  ● Web Search Fallback › Edge Cases › handles emoji-only messages

    expect(received).toContain(expected) // indexOf

    Expected substring: "can't interpret emoji-only messages"
    Received string:    "I'm a travel assistant. Please share a travel question (weather, destinations, packing, or attractions)."

      190 |       );
      191 |
    > 192 |       expect(result.reply).toContain('can\'t interpret emoji-only messages');
          |                            ^
      193 |       expect(result.citations).toBeUndefined();
      194 |     });
      195 |

      at Object.<anonymous> (tests/custom/web_search_fallback.test.ts:192:28)


Test Suites: 14 failed, 7 passed, 21 total
Tests:       38 failed, 43 passed, 81 total
Snapshots:   0 total
Time:        414.227 s
Ran all test suites matching /tests\/custom\//i.
{"level":20,"time":1757576057543,"pid":54374,"hostname":"sicksadmbp","msg":"✅ Model google/gemma-3n-e4b-it succeeded - Output: 42 tokens"}
{"level":20,"time":1757576057543,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","response":"{\"content_type\": \"travel\", \"is_explicit_search\": false, \"has_mixed_languages\": true, \"needs_web_search\": true, \"categori","responseType":"string","msg":"content_classification_response"}
{"level":20,"time":1757576057544,"pid":54374,"hostname":"sicksadmbp","message":"What is the weather in Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch?","intent":"unknown","confidence":0.3,"msg":"blend_unknown_intent"}

Jest has detected the following 2 open handles potentially keeping Jest from exiting:

  ●  bound-anonymous-fn

      52 |     // Use circuit breaker to protect API call
      53 |     const response = await braveSearchCircuitBreaker.execute(async () => {
    > 54 |       return await braveSearch.webSearch(query, {
         |                                ^
      55 |         count: 20,
      56 |         text_decorations: false, // Cleaner text without HTML markup
      57 |         spellcheck: true

      at new MockHttpSocket (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/MockHttpSocket.ts:128:25)
      at MockHttpsAgent.createConnection (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/agents.ts:97:20)
      at Object.apply (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/index.ts:112:24)
      at Object.apply (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/index.ts:112:24)
      at RedirectableRequest.Object.<anonymous>.RedirectableRequest._performRequest (node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (node_modules/follow-redirects/index.js:111:8)
      at Object.request (node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (node_modules/axios/lib/adapters/http.js:464:21)
      at node_modules/axios/lib/adapters/http.js:152:5
      at wrapAsync (node_modules/axios/lib/adapters/http.js:132:10)
      at http (node_modules/axios/lib/adapters/http.js:170:10)
      at Axios.dispatchRequest (node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (node_modules/axios/lib/core/Axios.js:187:33)
      at Axios.request (node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.<computed> [as get] (node_modules/axios/lib/core/Axios.js:213:17)
      at wrap [as get] (node_modules/axios/lib/helpers/bind.js:5:15)
      at BraveSearch.webSearch (node_modules/brave-search/dist/braveSearch.js:66:52)
      at src/tools/brave_search.ts:54:32
      at CircuitBreaker.execute (src/core/circuit-breaker.ts:52:9)
      at searchTravelInfo (src/tools/brave_search.ts:53:54)
      at Object.<anonymous> (tests/custom/brave_search.test.ts:35:44)


  ●  bound-anonymous-fn

      52 |     // Use circuit breaker to protect API call
      53 |     const response = await braveSearchCircuitBreaker.execute(async () => {
    > 54 |       return await braveSearch.webSearch(query, {
         |                                ^
      55 |         count: 20,
      56 |         text_decorations: false, // Cleaner text without HTML markup
      57 |         spellcheck: true

      at new MockHttpSocket (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/MockHttpSocket.ts:128:25)
      at MockHttpsAgent.createConnection (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/agents.ts:97:20)
      at Object.apply (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/index.ts:112:24)
      at Object.apply (node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/index.ts:112:24)
      at RedirectableRequest.Object.<anonymous>.RedirectableRequest._performRequest (node_modules/follow-redirects/index.js:337:24)
      at new RedirectableRequest (node_modules/follow-redirects/index.js:111:8)
      at Object.request (node_modules/follow-redirects/index.js:543:14)
      at dispatchHttpRequest (node_modules/axios/lib/adapters/http.js:464:21)
      at node_modules/axios/lib/adapters/http.js:152:5
      at wrapAsync (node_modules/axios/lib/adapters/http.js:132:10)
      at http (node_modules/axios/lib/adapters/http.js:170:10)
      at Axios.dispatchRequest (node_modules/axios/lib/core/dispatchRequest.js:51:10)
      at Axios._request (node_modules/axios/lib/core/Axios.js:187:33)
      at Axios.request (node_modules/axios/lib/core/Axios.js:40:25)
      at Axios.<computed> [as get] (node_modules/axios/lib/core/Axios.js:213:17)
      at wrap [as get] (node_modules/axios/lib/helpers/bind.js:5:15)
      at BraveSearch.webSearch (node_modules/brave-search/dist/braveSearch.js:66:52)
      at src/tools/brave_search.ts:54:32
      at CircuitBreaker.execute (src/core/circuit-breaker.ts:52:9)
      at searchTravelInfo (src/tools/brave_search.ts:53:54)
      at Object.<anonymous> (tests/custom/brave_search.test.ts:50:44)

~/IdeaProjects/navan/root (tests/update-test-suite) ❯ 